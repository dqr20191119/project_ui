{"remainingRequest":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\proj\\project_manage\\project-ui\\src\\views\\information-search\\project.vue?vue&type=style&index=0&id=6887308d&scoped=true&lang=scss&","dependencies":[{"path":"D:\\work\\proj\\project_manage\\project-ui\\src\\views\\information-search\\project.vue","mtime":1663479406088},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1663230084856},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1663230088519},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":1663230086089},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1663230084018},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663230084016},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1663230087832}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoub2wtcG9wdXAgew0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIHdpZHRoOiAzMzhweDsNCiAgaGVpZ2h0OiAzODhweDsNCiAgb3BhY2l0eTogMTsNCiAgYm90dG9tOiAxNXB4Ow0KICBsZWZ0OiAtMTY5cHg7DQogIHBhZGRpbmc6IDE1cHggMTVweCAxNXB4IDI1cHg7DQogIGJhY2tncm91bmQ6IHVybCguLi8uLi9hc3NldHMvaW1hZ2VzL3BvcF91cF9iZy5wbmcpIG5vLXJlcGVhdDsNCiAgYmFja2dyb3VuZC1zaXplOiAxMDAlIDEwMCU7DQp9DQojcG9wdXAtY29udGVudCA6OmFmdGVyIHsNCiAgcG9zaXRpb246IGFic29sdXRlOw0KICBib3R0b206IC0xNXB4Ow0KICBsZWZ0OiAxNDhweDsNCiAgY29udGVudDogJyc7DQogIHdpZHRoOiA0MHB4Ow0KICBoZWlnaHQ6IDE1cHg7DQogIGJhY2tncm91bmQ6IHVybCguLi8uLi9hc3NldHMvaW1hZ2VzL2JnX2Rvd24ucG5nKSBuby1yZXBlYXQ7DQogIGJhY2tncm91bmQtc2l6ZTogMTAwJSAxMDAlOw0KfQ0KLm9sLXBvcHVwLWNsb3NlciB7DQogIGJhY2tncm91bmQ6IHVybCguLi8uLi9hc3NldHMvaW1hZ2VzL2Nsb3NlLnBuZykgbm8tcmVwZWF0Ow0KICB0ZXh0LWRlY29yYXRpb246IG5vbmU7DQogIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgdG9wOiAyNXB4Ow0KICB3aWR0aDogMTZweDsNCiAgaGVpZ2h0OiAxNnB4Ow0KICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOw0KICByaWdodDogNDBweDsNCiAgei1pbmRleDogMjAwMDsNCiAgY29sb3I6IHdoaXRlOw0KICBmb250LXdlaWdodDogYm9sZDsNCn0NCg0KLnBvcHRhYmxlLXRoIHsNCiAgdGV4dC1hbGlnbjogbGVmdDsNCiAgY29sb3I6ICM2NDY1NjY7DQogIG1hcmdpbi1ib3R0b206IDEycHg7DQp9DQoucG9wVGFibGUgdGQgew0KICBmb250LXNpemU6IDE0cHg7DQp9DQoNCiNwb3Atc3VtbXJ5IHsNCiAgd2lkdGg6IDEwMCU7DQogIGhlaWdodDogMzc4cHg7DQogIGJvdHRvbTogMHB4Ow0KICB6LWluZGV4OiAxMDAwMDsNCiAgYm9yZGVyLXJhZGl1czogNDBweCA0MHB4IDBweCAwcHg7DQogIHBvc2l0aW9uOiBmaXhlZDsNCiAgYm9yZGVyOiAycHggc29saWQgI2ZmZjsNCn0NCjo6di1kZWVwIC5lbC1jaGVja2JveCB7DQogIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgZGlzcGxheTogYmxvY2s7DQoNCiAgaGVpZ2h0OiAyNnB4Ow0KfQ0KLmVsLWNoZWNrYm94LWdyb3VwIHsNCiAgd2lkdGg6IDEwMCU7DQp9DQouY29sb3JCb3ggew0KICB3aWR0aDogNDhweDsNCiAgaGVpZ2h0OiAxMnB4Ow0KICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogIGJvcmRlci1yYWRpdXM6IDJweDsNCiAgcG9zaXRpb246IGFic29sdXRlOw0KICByaWdodDogMTBweDsNCn0NCi5saWdodEdyZWVuIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogI2IxZGIxNjsNCn0NCi5saWdodFllbGxvdyB7DQogIGJhY2tncm91bmQtY29sb3I6ICNlYmNjMGM7DQp9DQoubGlnaHRSZWQgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWI3MzIzOw0KfQ0KLmJsdWUgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTk3OWZmOw0KfQ0KDQoucm9hZC1zZWxlY3Rvci1wb3Agew0KICB3aWR0aDogMTIwcHg7DQogIGhlaWdodDogMjAwcHg7DQogIHotaW5kZXg6IDIwMDAwMDsNCiAgcG9zaXRpb246IGZpeGVkOw0KICBtYXJnaW4tbGVmdDogNzBweDsNCiAgbWFyZ2luLXRvcDogNTVweDsNCiAgLnBvcC10aXRsZSB7DQogICAgZm9udC13ZWlnaHQ6IGJvbGQ7DQogICAgZm9udC1zaXplOiAxNHB4Ow0KICB9DQogIC5kaXYtc3dpdGNoIHsNCiAgICBtYXJnaW46IDEwcHggMCAyMHB4IDA7DQogIH0NCn0NCi5yb2FkLXNlbGVjdG9yLWNvbG9yIHsNCiAgd2lkdGg6IDEwMCU7DQp9DQouZmxleC1kaXYgew0KICBkaXNwbGF5OiBmbGV4Ow0KICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogIHBhZGRpbmc6IDI1cHggMzJweDsNCiAgZGl2IHsNCiAgICB3aWR0aDogMzMlOw0KICB9DQp9DQovKiDmgqzmta7moYbog4zmma8gKi8NCi5kaXYtYmcgew0KICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNTYpOw0KICBib3gtc2hhZG93OiAwcHggMTBweCAyMHB4IDFweCByZ2JhKDEzNSwgMTQxLCAxNTMsIDAuMSk7DQogIGJvcmRlci1yYWRpdXM6IDEycHggMTJweCAxMnB4IDEycHg7DQogIGhlaWdodDogMjcwcHg7DQogIHBhZGRpbmc6IDIwcHg7DQp9DQouYmx1ZS10aXRsZSB7DQogIGNvbG9yOiAjMDAzZjk3Ow0KfQ0KLmVsLWNvbGxhcHNlLWl0ZW0gew0KICB3aWR0aDogMjYwcHg7DQogIGhlaWdodDogNDRweDsNCiAgb3BhY2l0eTogMTsNCiAgOjp2LWRlZXAgLmVsLWNvbGxhcHNlLWl0ZW1fX2hlYWRlciB7DQogICAgaGVpZ2h0OiA0NHB4Ow0KICAgIHBhZGRpbmctbGVmdDogMTBweDsNCiAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOTYpOw0KICAgIGJveC1zaGFkb3c6IDBweCA1cHggMTBweCAxcHggcmdiYSgxODAsIDE5MCwgMjA0LCAwLjQpOw0KICAgIGJvcmRlci1yYWRpdXM6IDhweDsNCiAgfQ0KfQ0KOjp2LWRlZXAgLmVsLWNvbGxhcHNlIHsNCiAgYm9yZGVyOiBub25lOw0KfQ0KOjp2LWRlZXAgLmVsLWNvbGxhcHNlLWl0ZW1fX3dyYXAgew0KICBib3JkZXItcmFkaXVzOiAwIDAgOHB4IDhweDsNCiAgbWFyZ2luLXRvcDogLTVweDsNCn0NCi5kb3Qgew0KICB3aWR0aDogMjRweDsNCiAgaGVpZ2h0OiAxMHB4Ow0KICBib3JkZXItcmFkaXVzOiAycHg7DQogIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgbWFyZ2luLWxlZnQ6IDhweDsNCn0NCi5kaXYtc3dpdGNoIHsNCiAgd2lkdGg6IDI2MHB4Ow0KICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOTYpOw0KICBib3gtc2hhZG93OiAwcHggNXB4IDEwcHggMXB4IHJnYmEoMTgwLCAxOTAsIDIwNCwgMC40KTsNCiAgcGFkZGluZzogMjBweDsNCiAgYm9yZGVyLXJhZGl1czogOHB4Ow0KICBtYXJnaW4tYm90dG9tOiAyMHB4Ow0KICAuc3dpdGNoLXRpdGxlIHsNCiAgICBmb250LXdlaWdodDogYm9sZDsNCiAgICBmb250LXNpemU6IDE0cHg7DQogICAgbWFyZ2luLWJvdHRvbTogOHB4Ow0KICB9DQp9DQo="},{"version":3,"sources":["project.vue"],"names":[],"mappingssfile":"project.vue","sourceRoot":"src/views/information-search","sourcesContent":["<template>\r\n  <div id=\"map\" ref=\"map\" style=\"height: 890px\">\r\n    <!--点击查看详情弹框-->\r\n    <div id=\"popup\" class=\"ol-popup\">\r\n      <a\r\n        href=\"#\"\r\n        id=\"popup-closer\"\r\n        class=\"ol-popup-closer\"\r\n        @click=\"removePopup\"\r\n      />\r\n      <div id=\"popup-content\"></div>\r\n    </div>\r\n\r\n    <!--道路选择器-->\r\n    <div id=\"pop-road-selector\" class=\"ol-layer\">\r\n      <div class=\"road-selector-pop\">\r\n        <div class=\"div-switch\">\r\n          <div class=\"switch-title\">背景底图</div>\r\n          <el-switch\r\n            v-model=\"value1\"\r\n            active-color=\"#004AB3\"\r\n            inactive-color=\"#004AB3\"\r\n            active-text=\"卫星地图\"\r\n            inactive-text=\"电子地图\"\r\n            @change=\"switchChange\"\r\n          >\r\n          </el-switch>\r\n        </div>\r\n        <el-collapse accordion class=\"nav-select\" v-model=\"ac\">\r\n          <el-collapse-item name=\"1\">\r\n            <template slot=\"title\"> 显示图层 </template>\r\n            <el-tree\r\n              ref=\"tree\"\r\n              :data=\"filterTreeData\"\r\n              show-checkbox\r\n              node-key=\"id\"\r\n              :default-checked-keys=\"[1, 2, 3, 4, 5]\"\r\n              :props=\"defaultProps\"\r\n              @check=\"handleCheckChange\"\r\n            >\r\n              <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\r\n                <span>\r\n                  {{ node.label }}\r\n                </span>\r\n                <span\r\n                  class=\"dot\"\r\n                  :style=\"{ background: data.strokeColor }\"\r\n                ></span>\r\n              </span>\r\n            </el-tree>\r\n          </el-collapse-item>\r\n        </el-collapse>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport 'ol/ol.css'\r\nimport Map from 'ol/Map'\r\nimport * as olControl from 'ol/control'\r\nimport View from 'ol/View'\r\nimport { getWidth, getCenter } from 'ol/extent'\r\nimport TileLayer from 'ol/layer/Tile'\r\nimport WMTS from 'ol/source/WMTS'\r\nimport XYZ from 'ol/source/XYZ'\r\nimport WMTSTileGrid from 'ol/tilegrid/WMTS'\r\nimport Projection from 'ol/proj/Projection'\r\nimport { transform } from 'ol/proj'\r\nimport proj4 from 'proj4'\r\nimport { register } from 'ol/proj/proj4';\r\nimport VectorSource from 'ol/source/Vector'\r\nimport { TileWMS } from 'ol/source'\r\nimport VectorLayer from 'ol/layer/Vector'\r\nimport Feature from 'ol/Feature'\r\nimport { Draw } from 'ol/interaction'\r\nimport { Style, Circle, Stroke, Fill } from 'ol/src/style'\r\nimport WKT from 'ol/format/WKT'\r\nimport GeoJSON from 'ol/format/GeoJSON'\r\nimport Overlay from 'ol/Overlay'\r\nimport * as echarts from \"echarts\";\r\nimport axios from 'axios'\r\nimport request from '@/utils/request'\r\nimport LineString from 'ol/geom/LineString';\r\nimport MultiLineString from 'ol/geom/MultiLineString';\r\nimport MultiPolygon from 'ol/geom/MultiPolygon';\r\n\r\n\r\n\r\nimport Vue from 'vue'\r\n//中心坐标\r\nconst centerCordinate = [656951.22379894, 3559139.26626369]\r\nconst vectorLayerArray = [];\r\nconst layerNames = ['Test:road_area0808', 'Test:lines_view'];\r\n//坐标定义\r\nproj4.defs(\"EPSG:4548\", \"+proj=tmerc +lat_0=0 +lon_0=117 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs\");\r\nregister(proj4);\r\n//是否展示总体信息标识\r\nvar showSummryFlag = true;\r\n// 道路类型图例常量\r\nconst roadTypeName = ['快速路', '主干路', '次干路', '支路'];\r\nconst roadTypeNum = ['1', '2', '3', '4'];\r\nconst roadTypeColor = ['#b1db16', '#ebcc0c', '#eb7323', '#1979ff'];\r\n//图层名称 待修改 Test:GH_DL\r\nconst layerName = \"\tTest:gh_dl\";\r\n\r\n\r\nvar vectorLayer;\r\nvar vectorLayer2;\r\n//地图初始化\r\nconst view = new View({\r\n  center: transform(centerCordinate, 'EPSG:4548', 'EPSG:3857'),\r\n  minZoom: 4,\r\n  maxZoom: 18,\r\n  zoom: 13.7 // 地图初始化的缩放级别\r\n})\r\n\r\n\r\n\r\n//高德地图图层\r\nconst gaodeMapLayer = new TileLayer({\r\n  source: new XYZ({\r\n    url: 'http://webst0{1-4}.is.autonavi.com/appmaptile?lang=zh_cn&size=1&scale=1&style=7&x={x}&y={y}&z={z}'\r\n  })\r\n});\r\n\r\n//卫星地图\r\nconst wxMapLayer = new TileLayer({\r\n  source: new XYZ({\r\n    crossOrigin: \"anonymous\",\r\n    url: 'http://t0.tianditu.gov.cn/img_w/wmts?tk=129364168580e7f0e3ff5bd759d41a75&SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=img&STYLE=default&TILEMATRIXSET=w&TILEMATRIX={z}&TILEROW={y}&TILECOL={x}&FORMAT=tiles'\r\n  })\r\n});\r\n\r\n\r\n\r\nexport default {\r\n  name: \"Road\",\r\n  data () {\r\n    return {\r\n      ac: '1',\r\n      value1: 'true',\r\n      roadTypeRadio: [],\r\n      radio2: [],\r\n      addForm: {\r\n        sDeptName: '',\r\n        sDeptId: ''\r\n      },\r\n      checkedLayerArray: [],\r\n      vectorArray: [],\r\n      popDetailFlag: false,\r\n      filterTreeData: [],\r\n      treeData: [{\r\n        id: 1,\r\n        label: '道路',\r\n        layerName: \"Test:gh_dl\",\r\n        filterKey: 'layer',\r\n        fillTyple: \"fill\",\r\n        children: [{\r\n          id: 11,\r\n          label: '01北站快速路',\r\n          literal: '01北站快速路',\r\n          fillColor: \"#C6D7F5\",\r\n          strokeColor: \"#8D9092\",\r\n          width: \"1\",\r\n\r\n        }, {\r\n          id: 12,\r\n          label: '02朱家山河路',\r\n          literal: '02朱家山河路',\r\n          fillColor: \"#C6D7F5\",\r\n          strokeColor: \"#8D9092\",\r\n          width: \"1\",\r\n\r\n        }, {\r\n          id: 13,\r\n          label: '03站南一路',\r\n          literal: '03站南一路',\r\n          fillColor: \"#C6D7F5\",\r\n          strokeColor: \"#8D9092\",\r\n          width: \"1\",\r\n\r\n        },\r\n        {\r\n          id: 14,\r\n          label: '04站南二路',\r\n          literal: '04站南二路',\r\n          fillColor: \"#C6D7F5\",\r\n          strokeColor: \"#8D9092\",\r\n          width: \"1\",\r\n\r\n        },\r\n        {\r\n          id: 15,\r\n          label: '05站西路',\r\n          fillColor: \"#C6D7F5\",\r\n          strokeColor: \"#8D9092\",\r\n          literal: '05站西路',\r\n          width: \"1\",\r\n\r\n        },\r\n        {\r\n          id: 16,\r\n          label: '06涉段节点道',\r\n          literal: '06涉段节点道',\r\n          fillColor: \"#C6D7F5\",\r\n          strokeColor: \"#8D9092\",\r\n          width: \"1\",\r\n\r\n        },\r\n        {\r\n          id: 17,\r\n          label: '07西快线',\r\n          literal: '07西快线',\r\n          fillColor: \"#C6D7F5\",\r\n          strokeColor: \"#8D9092\",\r\n          width: \"1\",\r\n\r\n        }, {\r\n          id: 18,\r\n          label: '08涉铁支路',\r\n          literal: '08涉铁支路',\r\n          fillColor: \"#C6D7F5\",\r\n          strokeColor: \"#8D9092\",\r\n          width: \"1\",\r\n\r\n        }]\r\n\r\n      }, {\r\n        id: 2,\r\n        label: '河道',\r\n        layerName: \"Test:gh_hd_v2\",\r\n        filterKey: 'layer',\r\n        fillTyple: \"fill\",\r\n        children: [{\r\n          id: 21,\r\n          label: '01中心河',\r\n          literal: '01中心',\r\n          fillColor: \"#d9f2ce\",\r\n          strokeColor: \"#8D9092\",\r\n          width: \"1\",\r\n\r\n        }, {\r\n          id: 22,\r\n          label: '02东一河',\r\n          literal: '02东一',\r\n          fillColor: \"#d9f2ce\",\r\n          strokeColor: \"#8D9092\",\r\n          width: \"1\",\r\n\r\n        }]\r\n      }, {\r\n        id: 4,\r\n        label: '市政管线工程',\r\n        filterKey: 'layer',\r\n        layerName: \"Test:gh_gx\",\r\n        children: [{\r\n          id: 41,\r\n          label: '01市政管线工程',\r\n          literal: '01市政管线',\r\n          fillColor: \"#949D42\",\r\n          strokeColor: \"#949D42\",\r\n          width: \"1\",\r\n\r\n        }]\r\n      },\r\n      {\r\n        id: 5,\r\n        label: '水域',\r\n        filterKey: 'layer',\r\n        layerName: \"Test:gh_sy\",\r\n        fillTyple: \"fill\",\r\n        // display: false,\r\n        children: [{\r\n          id: 51,\r\n          label: '01水域',\r\n          literal: '01水域',\r\n          fillColor: \"#BEE4F7\",\r\n          width: \"1\",\r\n\r\n        }]\r\n      },\r\n      {\r\n        id: 3,\r\n        label: '水环境整治',\r\n        filterKey: 'layer',\r\n        layerName: \"Test:gh_shjzz\",\r\n        fillTyple: \"fill\",\r\n        children: [{\r\n          id: 31,\r\n          label: '01水环境整治工程',\r\n          literal: '01水环境',\r\n          fillColor: \"#FFC8FE\",\r\n          strokeColor: \"#8D9092\",\r\n          width: \"1\",\r\n\r\n        }]\r\n      }\r\n\r\n      ],\r\n\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'label'\r\n      },\r\n      projectRadio: [\"1\", \"2\"],\r\n      geoJsonList: {},\r\n      roadBasicInfo: {},\r\n      myChart: {},\r\n      // sortData: [], //动态排序数据\r\n      myChartStyle: {\r\n        width: \"100%\", height: \"250px\", display: \"inline-block\"\r\n      },\r\n      roadChartOption: {\r\n        title: {\r\n          text: '北站片区各类型道路总长度（km）',\r\n          textStyle: {\r\n            color: 'rgba(18, 25, 36, 1)',\r\n            fontSize: 15,\r\n            fontWeight: 'normal'\r\n          },\r\n          x: 'center',\r\n          y: '4px',\r\n\r\n        },\r\n        xAxis: {\r\n          max: \"dataMax\",\r\n          //坐标轴刻度线\r\n          axisTick: {\r\n            show: false\r\n          },\r\n          //轴线\r\n          axisLine: {\r\n            show: false\r\n          },\r\n          axisLabel: {//修改坐标系字体颜色\r\n            show: true,\r\n            textStyle: {\r\n              color: \"rgba(100, 101, 102, 1)\",\r\n              fontSize: 10\r\n            }\r\n          },\r\n\r\n        },\r\n        yAxis: {\r\n          type: \"category\",\r\n          data: [\"支路\", \"次干路\", \"主干路\", \"快速路\"],\r\n          axisTick: {\r\n            show: false  //坐标轴刻度线\r\n          },\r\n          axisLabel: {//修改坐标系字体颜色\r\n            show: true,\r\n            textStyle: {\r\n              color: \"rgba(100, 101, 102, 1)\",\r\n              fontSize: 10\r\n            }\r\n          },\r\n          axisLine: {//y轴线的颜色以及宽度\r\n            show: true,\r\n            lineStyle: {\r\n              color: \"rgba(226, 229, 235, 1)\",\r\n\r\n            },\r\n          },\r\n\r\n        },\r\n        series: [\r\n          {\r\n            //  name: \"北站片区各类型道路总长度(km)\",\r\n            type: \"bar\",\r\n            data: [],\r\n            label: {\r\n              show: true,\r\n              position: \"right\",\r\n              valueAnimation: true,\r\n              textStyle: {\r\n                fontSize: 10,\r\n                color: 'black'\r\n              }\r\n            },\r\n            //柱图宽度\r\n            barWidth: 12,\r\n            itemStyle: {\r\n              normal: {\r\n                //柱图颜色\r\n                color: new echarts.graphic.LinearGradient(1, 1, 0, 0, [\r\n                  { offset: 0, color: '#1979ff' },\r\n                  { offset: 1, color: 'rgba(25,121,255,0.1000)' }\r\n                ]),\r\n                barBorderRadius: [0, 90, 90, 0]\r\n              }\r\n            },\r\n          }\r\n\r\n        ],\r\n        legend: {\r\n\r\n        },\r\n        grid: {\r\n          left: '2%',\r\n          top: '40px',\r\n          containLabel: true,\r\n          backgroundColor: 'green',\r\n          borderWidth: 1,\r\n          borderColor: '#ccc'\r\n        },\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n\r\n    //初始化图层\r\n    this.initLayer();\r\n    document.getElementById('popup').style.display = 'none';\r\n\r\n  },\r\n\r\n  created () {\r\n    //过滤不需要展示树形节点\r\n    this.filterDataTree();\r\n  },\r\n\r\n\r\n\r\n  methods: {\r\n\r\n    filterDataTree () {\r\n      this.treeData.forEach(item => {\r\n        if (item.display != false) {\r\n          this.filterTreeData.push(item);\r\n        }\r\n      })\r\n\r\n    },\r\n\r\n    initCheckedLayer () {\r\n      var checkedArray = this.$refs.tree.getCheckedKeys(false);\r\n      var layerNameArray = [];\r\n      this.treeData.forEach(item => {\r\n        var idIndex = checkedArray.findIndex(item2 => {\r\n          return item2 == item.id;\r\n        });\r\n        //图例树层级不展示需要加载到图层\r\n        if (idIndex != -1 || item.display == false) {\r\n          let layerNameTmp = item.layerName;\r\n          if (layerNameTmp) {\r\n            layerNameArray.push({\r\n              layerName: layerNameTmp,\r\n              filterKey: item.filterKey,\r\n              treeDataItem: item\r\n            })\r\n          }\r\n        }\r\n      })\r\n      this.checkedLayerArray = layerNameArray;\r\n    },\r\n\r\n\r\n\r\n    handleCheckChange (data, checkedInfo) {\r\n      this.removePopup();\r\n      this.clearHighlight();\r\n      //图层显隐藏\r\n      var isParentCheckBox = data.layerName != '' && data.layerName != undefined;\r\n      var checkedKeys = checkedInfo.checkedKeys;\r\n      var chekboxId = data.id;\r\n      var index = checkedKeys.findIndex(item => {\r\n        return item == chekboxId;\r\n      })\r\n      let checked = (index != -1)\r\n      //设置图层显隐\r\n      if (isParentCheckBox) {\r\n        this.vectorArray.forEach((element, index) => {\r\n          if (element.id == chekboxId) {\r\n            checked ? element.vectorLayer.setVisible(true)\r\n              : element.vectorLayer.setVisible(false);\r\n          }\r\n        })\r\n      }\r\n      //设置图层属性样式\r\n      let treeDataItem;\r\n      let parentNode;\r\n      if (isParentCheckBox) {\r\n        parentNode = this.$refs.tree.getNode(chekboxId);\r\n      } else {\r\n        let currentNode = this.$refs.tree.getNode(chekboxId);\r\n        parentNode = currentNode.parent.data;\r\n      }\r\n      var parentNodeId = parentNode.id;\r\n      const vectoryLayerTmpArray = this.vectorArray.filter(item => item.id == parentNodeId)\r\n      treeDataItem = JSON.parse(JSON.stringify(parentNode));\r\n      let treeeDataChildren = [];\r\n      treeDataItem.children.forEach(item => {\r\n        var isItemChecked = checkedKeys.findIndex(item2 => {\r\n          return item2 == item.id;\r\n        })\r\n        if (isItemChecked != -1) {\r\n          treeeDataChildren.push(item);\r\n        }\r\n      })\r\n      let vectoryLayerTmp = vectoryLayerTmpArray[0].vectorLayer\r\n      if (treeeDataChildren.length == 0) {\r\n        vectoryLayerTmp.setVisible(false);\r\n        return;\r\n      }\r\n      treeDataItem.children = treeeDataChildren;\r\n      let changeStyleParam = {\r\n        layerName: parentNode.layerName,\r\n        filterKey: parentNode.filterKey,\r\n        treeDataItem: treeDataItem\r\n      }\r\n      this.initStyle(changeStyleParam, (data) => {\r\n        //子节点全部取消勾选，隐藏图层\r\n        vectoryLayerTmp.setVisible(true);\r\n        vectoryLayerTmp.getSource().updateParams({ 'STYLES': undefined, 'SLD_BODY': data });\r\n      })\r\n\r\n    },\r\n\r\n    //初始化样式\r\n    initStyle (checkedItem, callback) {\r\n      if (checkedItem == null || checkedItem.length == 0) {\r\n        callback(null);\r\n      }\r\n      let layerName = checkedItem.layerName;\r\n      let filterKey = checkedItem.filterKey;\r\n      var fillTyple = checkedItem.treeDataItem.fillTyple\r\n      var initSld = '<?xml version=\"1.0\" encoding=\"GBK\"?><StyledLayerDescriptor version=\"1.0.0\" xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:gml=\"http://www.opengis.net/gml\" xsi:schemaLocation=\"http://www.opengis.net/sld http://schemas.opengis.net/sld/1.0.0/StyledLayerDescriptor.xsd\"><NamedLayer><Name>' + layerName + '</Name><UserStyle><Name>project</Name><Title>project</Title><Abstract>project</Abstract><FeatureTypeStyle>';\r\n      checkedItem.treeDataItem.children.forEach((item) => {\r\n        var literal = item.literal;\r\n        var fillColor = item.fillColor;\r\n        var strokeColor = item.strokeColor;\r\n        var width = item.width;\r\n        initSld = initSld + '<Rule><Title>' + literal + '</Title><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>' + filterKey + '</ogc:PropertyName><ogc:Literal>' + literal + '</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter>' + '<PolygonSymbolizer>';\r\n        if (fillTyple == 'fill') {\r\n          initSld = initSld + '<Fill><CssParameter name=\"fill\">' + fillColor + '</CssParameter></Fill>';\r\n        }\r\n        if (strokeColor != '' && strokeColor != undefined) {\r\n          initSld = initSld + '<Stroke><CssParameter name=\"stroke\">' + strokeColor + '</CssParameter><CssParameter name=\"stroke-width\">' + width + '</CssParameter></Stroke>'\r\n        }\r\n        initSld = initSld + '</PolygonSymbolizer></Rule>';\r\n      });\r\n      initSld = initSld + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';\r\n      callback(initSld);\r\n    },\r\n\r\n    initLayer () {\r\n      const roadLinesWms = new TileWMS({\r\n        url: process.env.VUE_APP_GIS_BASE_URL + '/wms',\r\n        projection: 'EPSG:3857',\r\n        params: {\r\n          'LAYERS': 'Test:Road_lines',\r\n          'VERSION': '1.1.0'\r\n\r\n        },\r\n        serverType: 'geoserver'\r\n      });\r\n      //自定义图层1\r\n      const roadLineLayer = new TileLayer({\r\n        source: roadLinesWms\r\n      });\r\n      //底图：卫星图 高德底图 道路图\r\n      wxMapLayer.setVisible(false);\r\n      let layers = [wxMapLayer, gaodeMapLayer, roadLineLayer];\r\n      this.initCheckedLayer();\r\n      const mapContainer = this.$refs.map\r\n      this.checkedLayerArray.forEach(item => {\r\n        let sldBody;\r\n        this.initStyle(item, (data) => {\r\n          sldBody = data;\r\n        })\r\n        const wmsSourceTmp = new TileWMS({\r\n          url: process.env.VUE_APP_GIS_BASE_URL + '/wms',\r\n          projection: 'EPSG:4548',\r\n          params: {\r\n            'LAYERS': item.layerName,\r\n            'VERSION': '1.1.0',\r\n            'STYLES': undefined,\r\n            'SLD_BODY': sldBody\r\n          },\r\n          serverType: 'geoserver'\r\n        });\r\n        const vectorLayerTemp = new TileLayer({\r\n          source: wmsSourceTmp,\r\n          name: item.layerName\r\n        });\r\n        this.vectorArray.push({\r\n          id: item.treeDataItem.id,\r\n          vectorLayer: vectorLayerTemp\r\n        })\r\n        layers.push(vectorLayerTemp)\r\n      })\r\n      const map = new Map({\r\n        layers: layers,\r\n        target: mapContainer,\r\n        view: view\r\n      });\r\n\r\n      // 添加鼠标点击事件\r\n      map.on('click', this.mapClick);\r\n      // 保存地图\r\n      this.mapData = map\r\n\r\n    },\r\n\r\n\r\n    // 弹出框\r\n    addPopup (coordinate, feature) {\r\n      this.removePopup()\r\n      // 获取弹出层DOM\r\n      let container = document.getElementById('popup')\r\n      let content = document.getElementById('popup-content')\r\n      if (this.overlay) {\r\n      } else {\r\n        // 创建Overlay弹出层绑定DOM\r\n        this.overlay = new Overlay({\r\n          element: container,\r\n          autoPan: {\r\n            animation: {\r\n              duration: 250\r\n            }\r\n          }\r\n        })\r\n        // 添加到map\r\n        this.mapData.addOverlay(this.overlay)\r\n      }\r\n\r\n      let projectName = feature.properties.项目名;\r\n      let projectDesc = feature.properties.项目概;\r\n      let start = feature.properties.起点;\r\n      let end = feature.properties.终点 == null ? \"\" : feature.properties.终点;\r\n      let length = feature.properties.长度 == null ? \"\" : feature.properties.长度;\r\n      let jaf = feature.properties.建安费_;\r\n      let ztz = feature.properties.总投资;\r\n      let kcsjf = feature.properties.勘察设;\r\n      let kcsjffh = feature.properties.勘察_1 == null ? \"\" : feature.properties.勘察_1;\r\n      let status = feature.properties.目前工 == null ? \"\" : feature.properties.目前工;\r\n      let bz = feature.properties.备注 == null ? \"\" : feature.properties.备注;\r\n\r\n      //  word-break:keep-all; white-space:nowrap;overflow:hidden; text-overflow:ellipsis;\r\n\r\n      content.innerHTML = `\r\n                      <div style='color:#121924;font-weight: bold;width:100%;z-index:4;height:42px;padding:6px;font-size: 15px'>`+ projectName + `</div>\r\n                      <div style='font-size: 10px;width:100%;line-height:30px;height:315px;overflow-y: auto;'>\r\n                        <div style='margin-top:10px;line-height: 24px;'>\r\n                          <span style=\"color:#646566;width: 90px;\">项目概况：</span>\r\n                          <div style=\"text-indent: 2rem;font-size:14px;\">`+ projectDesc + `</div>\r\n                        </div>\r\n                          <div>\r\n                            <span class='poptable-th' style=\"color:#646566;\">起点：</span>\r\n                            <span style=\"text-align: right;font-size:14px\">`+ start + `</span>\r\n                          </div>\r\n                          <div>\r\n                              <span class='poptable-th' style=\"color:#646566\">目前工作进展：</span>\r\n                              <span style=\"text-align: right;font-size:14px\">`+ status + `</span>\r\n                          </div>\r\n\r\n\r\n                          <div>\r\n                            <span class='poptable-th' style=\"color:#646566\">终点：</span>\r\n                            <span style=\"text-align: right;font-size:14px\">`+ end + `</span>\r\n                          </div>\r\n                          <div>\r\n                            <span class='poptable-th' style=\"color:#646566\">长度/km：</span>\r\n                            <span style=\"text-align: right;font-size:14px\">`+ length + `</span>\r\n                          </div>\r\n\r\n\r\n                          <div>\r\n                            <span class='poptable-th' style=\"color:#646566\">总投资/亿元：</span>\r\n                            <span style=\"text-align: right;font-size:14px\">`+ ztz + `</span>\r\n                          </div>\r\n\r\n                        <div>\r\n                          <span class='poptable-th' style=\"color:#646566\">勘察设计费复核：</span>\r\n                          <span style=\"text-align: right;font-size:14px\">`+ kcsjffh + `</span>\r\n                        </div>\r\n                          <div style='line-height: 24px;>\r\n                          <span class='poptable-th' style=\"color:#646566\">备注：</span>\r\n                          <span style=\"text-indent: 2rem;font-size:14px;\">`+ bz + `</span>\r\n                        </div>\r\n                      </div>\r\n                      `\r\n\r\n      // 设置弹出层位置即可出现\r\n      this.overlay.setPosition(coordinate)\r\n      document.getElementById('popup').style.display = 'block';\r\n    },\r\n\r\n    // 清除弹出框\r\n    removePopup () {\r\n      console.log('移除弹框')\r\n      if (this.overlay) {\r\n        // 设置位置undefined可达到隐藏清除弹出框\r\n        this.overlay.setPosition(undefined)\r\n      }\r\n    },\r\n\r\n\r\n    showSummryPop () {\r\n      showSummryFlag = true;\r\n      document.getElementById('pop-summry—collapse').style.display = 'none';\r\n      document.getElementById('pop-summry').classList.remove('popsummry-down-animation')\r\n      document.getElementById('pop-summry').classList.remove('popsummry-up-animation')\r\n      document.getElementById('pop-summry').style.bottom = '-250px'\r\n      document.getElementById('pop-summry').classList.add('popsummry-up-animation')\r\n      document.getElementById('hideSummryLink').style.right = '60px'\r\n\r\n    },\r\n\r\n    hideSummryPop () {\r\n      showSummryFlag = false;\r\n      //重置，否则动画效果只触发一次\r\n      document.getElementById('pop-summry').style.bottom = '0px'\r\n      document.getElementById('pop-summry').classList.remove('popsummry-down-animation')\r\n      document.getElementById('pop-summry').classList.remove('popsummry-up-animation')\r\n      document.getElementById('pop-summry').classList.add('popsummry-down-animation');\r\n    },\r\n\r\n\r\n\r\n    clearHighlight () {\r\n      let arr = this.mapData.getLayers().array_\r\n      let oldLayer = {}\r\n      arr.forEach(item => {\r\n        if (item.get(\"id\") == \"highlightLayer\") {\r\n          oldLayer = item\r\n        }\r\n      })\r\n      if (oldLayer && oldLayer.className_) {\r\n        this.mapData.removeLayer(oldLayer)\r\n      }\r\n    },\r\n\r\n\r\n    addHighLightStyle (clickFeature, thisObj, clickLayer) {\r\n      this.clearHighlight();\r\n      let featureObj = new GeoJSON({ featureProjection: 'EPSG:3857', dataProjection: 'EPSG:4548' }).readFeatures(clickFeature)\r\n      let highLightStyle = new Style({\r\n        fill: new Fill({\r\n          color: \"#ffff00\",\r\n        }),\r\n        stroke: new Stroke({\r\n          color: \"#ffff00\",\r\n          width: 3.5\r\n        }),\r\n\r\n      })\r\n      featureObj[0].setStyle(highLightStyle);\r\n      thisObj.highLightLayer = new VectorLayer({\r\n        name: \"dk\",\r\n        source: new VectorSource({\r\n          features: featureObj,\r\n        }),\r\n        style: (feature, solution) => {\r\n          return highLightStyle;\r\n        }\r\n      })\r\n      thisObj.highLightLayer.set(\"id\", \"highlightLayer\")\r\n      this.mapData.addLayer(thisObj.highLightLayer)\r\n\r\n\r\n    },\r\n\r\n\r\n    fechFeatureInfo: async function (url, thisObj, evt, clickLayer) {\r\n      try {\r\n        await axios.get(url, null).then(function (res) {\r\n          var objData = res.data;\r\n          if (objData && objData.features[0]) {\r\n            if (thisObj.popDetailFlag == true) {\r\n              return;\r\n            }\r\n            thisObj.popDetailFlag = true;\r\n            thisObj.addPopup(evt.coordinate, objData.features[0]);\r\n            //设置高亮图层\r\n            thisObj.addHighLightStyle(objData.features[0], thisObj, clickLayer)\r\n\r\n          } else {\r\n            if (thisObj.popDetailFlag == false) {\r\n              thisObj.removePopup();\r\n            }\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    },\r\n\r\n    //卫星地图切换\r\n    switchChange () {\r\n      let layerTypeSelect = this.value1;\r\n      gaodeMapLayer.setVisible(!layerTypeSelect)\r\n      wxMapLayer.setVisible(layerTypeSelect)\r\n    },\r\n\r\n\r\n\r\n    //地图点击事件\r\n    mapClick (evt) {\r\n      this.removePopup();\r\n      this.popDetailFlag = false;\r\n      let thisObj = this;\r\n      var viewResolution = view.getResolution();\r\n      for (let k = 0; k < this.vectorArray.length; k++) {\r\n        let item = this.vectorArray[k];\r\n        let vectoryTemp = item.vectorLayer;\r\n        let visible = vectoryTemp.values_.visible;\r\n        //水域图层不展示详情\r\n        if (this.popDetailFlag == true || item.id == 5 || !visible) {\r\n          continue;\r\n        }\r\n        var featureUrl = vectoryTemp.getSource().getFeatureInfoUrl(\r\n          evt['coordinate'],\r\n          viewResolution,\r\n          'EPSG:3857',\r\n          { 'INFO_FORMAT': 'application/json' }\r\n        );\r\n        if (featureUrl) {\r\n          this.fechFeatureInfo(featureUrl, thisObj, evt, vectoryTemp);\r\n        } else {\r\n          this.removePopup();\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.ol-popup {\r\n  position: absolute;\r\n  width: 338px;\r\n  height: 388px;\r\n  opacity: 1;\r\n  bottom: 15px;\r\n  left: -169px;\r\n  padding: 15px 15px 15px 25px;\r\n  background: url(../../assets/images/pop_up_bg.png) no-repeat;\r\n  background-size: 100% 100%;\r\n}\r\n#popup-content ::after {\r\n  position: absolute;\r\n  bottom: -15px;\r\n  left: 148px;\r\n  content: '';\r\n  width: 40px;\r\n  height: 15px;\r\n  background: url(../../assets/images/bg_down.png) no-repeat;\r\n  background-size: 100% 100%;\r\n}\r\n.ol-popup-closer {\r\n  background: url(../../assets/images/close.png) no-repeat;\r\n  text-decoration: none;\r\n  position: absolute;\r\n  top: 25px;\r\n  width: 16px;\r\n  height: 16px;\r\n  background-size: cover;\r\n  right: 40px;\r\n  z-index: 2000;\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n\r\n.poptable-th {\r\n  text-align: left;\r\n  color: #646566;\r\n  margin-bottom: 12px;\r\n}\r\n.popTable td {\r\n  font-size: 14px;\r\n}\r\n\r\n#pop-summry {\r\n  width: 100%;\r\n  height: 378px;\r\n  bottom: 0px;\r\n  z-index: 10000;\r\n  border-radius: 40px 40px 0px 0px;\r\n  position: fixed;\r\n  border: 2px solid #fff;\r\n}\r\n::v-deep .el-checkbox {\r\n  position: relative;\r\n  display: block;\r\n\r\n  height: 26px;\r\n}\r\n.el-checkbox-group {\r\n  width: 100%;\r\n}\r\n.colorBox {\r\n  width: 48px;\r\n  height: 12px;\r\n  display: inline-block;\r\n  border-radius: 2px;\r\n  position: absolute;\r\n  right: 10px;\r\n}\r\n.lightGreen {\r\n  background-color: #b1db16;\r\n}\r\n.lightYellow {\r\n  background-color: #ebcc0c;\r\n}\r\n.lightRed {\r\n  background-color: #eb7323;\r\n}\r\n.blue {\r\n  background-color: #1979ff;\r\n}\r\n\r\n.road-selector-pop {\r\n  width: 120px;\r\n  height: 200px;\r\n  z-index: 200000;\r\n  position: fixed;\r\n  margin-left: 70px;\r\n  margin-top: 55px;\r\n  .pop-title {\r\n    font-weight: bold;\r\n    font-size: 14px;\r\n  }\r\n  .div-switch {\r\n    margin: 10px 0 20px 0;\r\n  }\r\n}\r\n.road-selector-color {\r\n  width: 100%;\r\n}\r\n.flex-div {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 25px 32px;\r\n  div {\r\n    width: 33%;\r\n  }\r\n}\r\n/* 悬浮框背景 */\r\n.div-bg {\r\n  background: rgba(255, 255, 255, 0.56);\r\n  box-shadow: 0px 10px 20px 1px rgba(135, 141, 153, 0.1);\r\n  border-radius: 12px 12px 12px 12px;\r\n  height: 270px;\r\n  padding: 20px;\r\n}\r\n.blue-title {\r\n  color: #003f97;\r\n}\r\n.el-collapse-item {\r\n  width: 260px;\r\n  height: 44px;\r\n  opacity: 1;\r\n  ::v-deep .el-collapse-item__header {\r\n    height: 44px;\r\n    padding-left: 10px;\r\n    background: rgba(255, 255, 255, 0.96);\r\n    box-shadow: 0px 5px 10px 1px rgba(180, 190, 204, 0.4);\r\n    border-radius: 8px;\r\n  }\r\n}\r\n::v-deep .el-collapse {\r\n  border: none;\r\n}\r\n::v-deep .el-collapse-item__wrap {\r\n  border-radius: 0 0 8px 8px;\r\n  margin-top: -5px;\r\n}\r\n.dot {\r\n  width: 24px;\r\n  height: 10px;\r\n  border-radius: 2px;\r\n  display: inline-block;\r\n  margin-left: 8px;\r\n}\r\n.div-switch {\r\n  width: 260px;\r\n  background: rgba(255, 255, 255, 0.96);\r\n  box-shadow: 0px 5px 10px 1px rgba(180, 190, 204, 0.4);\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  margin-bottom: 20px;\r\n  .switch-title {\r\n    font-weight: bold;\r\n    font-size: 14px;\r\n    margin-bottom: 8px;\r\n  }\r\n}\r\n</style>\r\n"]}]}