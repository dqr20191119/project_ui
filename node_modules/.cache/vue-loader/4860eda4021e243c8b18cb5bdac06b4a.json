{"remainingRequest":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\proj\\project_manage\\project-ui\\src\\views\\config\\tableList.vue?vue&type=style&index=0&id=431a6b99&scoped=true&lang=css&","dependencies":[{"path":"D:\\work\\proj\\project_manage\\project-ui\\src\\views\\config\\tableList.vue","mtime":1663479653278},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1663230084856},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1663230088519},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":1663230086089},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663230084016},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1663230087832}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmNvbG9yQm94IHsNCiAgd2lkdGg6IDQ4cHg7DQogIGhlaWdodDogMTJweDsNCiAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KICBib3JkZXItcmFkaXVzOiAycHg7DQogIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCn0NCg=="},{"version":3,"sources":["tableList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwYA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tableList.vue","sourceRoot":"src/views/config","sourcesContent":["<template>\r\n  <div>\r\n    <el-dialog\r\n      :title=\"title\"\r\n      :visible.sync=\"open\"\r\n      width=\"1200px\"\r\n      append-to-body\r\n    >\r\n      <el-form\r\n        :model=\"queryParams\"\r\n        ref=\"queryForm\"\r\n        size=\"small\"\r\n        :inline=\"true\"\r\n        v-show=\"showSearch\"\r\n      >\r\n        <el-form-item label=\"标签\" prop=\"label\">\r\n          <el-input\r\n            v-model=\"queryParams.label\"\r\n            placeholder=\"请输入标签\"\r\n            clearable\r\n            @keyup.enter.native=\"handleQuery\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button\r\n            type=\"primary\"\r\n            icon=\"el-icon-search\"\r\n            size=\"mini\"\r\n            @click=\"handleQuery\"\r\n            >搜索</el-button\r\n          >\r\n          <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\"\r\n            >重置</el-button\r\n          >\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <el-row :gutter=\"10\" class=\"mb8\">\r\n        <el-col :span=\"1.5\">\r\n          <el-button\r\n            type=\"primary\"\r\n            plain\r\n            icon=\"el-icon-plus\"\r\n            size=\"mini\"\r\n            @click=\"handleAdd\"\r\n            v-hasPermi=\"['config:table:add']\"\r\n            >新增</el-button\r\n          >\r\n        </el-col>\r\n        <el-col :span=\"1.5\">\r\n          <el-button\r\n            type=\"info\"\r\n            plain\r\n            icon=\"el-icon-sort\"\r\n            size=\"mini\"\r\n            @click=\"toggleExpandAll\"\r\n            >展开/折叠</el-button\r\n          >\r\n        </el-col>\r\n        <right-toolbar\r\n          :showSearch.sync=\"showSearch\"\r\n          @queryTable=\"getList\"\r\n        ></right-toolbar>\r\n      </el-row>\r\n\r\n      <el-table\r\n        v-if=\"refreshTable\"\r\n        v-loading=\"loading\"\r\n        :data=\"tableList\"\r\n        row-key=\"id\"\r\n        :default-expand-all=\"isExpandAll\"\r\n        :tree-props=\"{ children: 'children', hasChildren: 'hasChildren' }\"\r\n      >\r\n        <el-table-column\r\n          prop=\"label\"\r\n          label=\"标签名称\"\r\n          width=\"200\"\r\n        ></el-table-column>\r\n\r\n        <el-table-column\r\n          prop=\"value\"\r\n          label=\"标签值\"\r\n          width=\"200\"\r\n        ></el-table-column>\r\n\r\n        <el-table-column\r\n          prop=\"color\"\r\n          label=\"颜色\"\r\n          width=\"160\"\r\n          v-if=\"cptType != 'TABLE'\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <span\r\n              v-if=\"scope.row.color\"\r\n              class=\"colorBox\"\r\n              :style=\"{ background: colorStyle(scope.row.color) }\"\r\n            ></span>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column\r\n          prop=\"orderNum\"\r\n          label=\"显示顺序\"\r\n          width=\"120\"\r\n        ></el-table-column>\r\n\r\n        <el-table-column\r\n          label=\"创建时间\"\r\n          align=\"center\"\r\n          prop=\"createTime\"\r\n          width=\"160\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ parseTime(scope.row.createTime) }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          label=\"操作\"\r\n          align=\"center\"\r\n          class-name=\"small-padding fixed-width\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <el-button\r\n              size=\"mini\"\r\n              type=\"text\"\r\n              icon=\"el-icon-edit\"\r\n              @click=\"handleUpdate(scope.row)\"\r\n              v-hasPermi=\"['config:table:edit']\"\r\n              >修改</el-button\r\n            >\r\n            <el-button\r\n              size=\"mini\"\r\n              type=\"text\"\r\n              icon=\"el-icon-plus\"\r\n              @click=\"handleAdd(scope.row)\"\r\n              v-hasPermi=\"['config:table:add']\"\r\n              >新增</el-button\r\n            >\r\n            <el-button\r\n              v-if=\"scope.row.parentId != 0\"\r\n              size=\"mini\"\r\n              type=\"text\"\r\n              icon=\"el-icon-delete\"\r\n              @click=\"handleDelete(scope.row)\"\r\n              v-hasPermi=\"['config:table:remove']\"\r\n              >删除</el-button\r\n            >\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"cancel\">确 定</el-button>\r\n        <el-button @click=\"cancel\">取 消</el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <TableDetail ref=\"tableDetail\"></TableDetail>\r\n  </div>\r\n  <!-- </div> -->\r\n</template>\r\n<script>\r\nimport { listByCptId, initTableTreeSelect, getInfo, delInfo } from \"@/api/config/table\";\r\nimport TableDetail from './tableDetail.vue';\r\nexport default {\r\n  dicts: ['sys_show_hide'],\r\n  components: { TableDetail },\r\n\r\n  name: \"Config\",\r\n  data () {\r\n    return {\r\n      // 遮罩层\r\n      loading: true,\r\n      // 选中数组\r\n      ids: [],\r\n      // 非单个禁用\r\n      single: true,\r\n      // 非多个禁用\r\n      multiple: true,\r\n      // 显示搜索条件\r\n      showSearch: true,\r\n      // 总条数\r\n      total: 0,\r\n      // 【请填写功能名称】表格数据\r\n      configList: [],\r\n      // 弹出层标题\r\n      title: \"表格数据管理\",\r\n      // 是否显示查询列表弹出层\r\n      open: false,\r\n      addRootLegend: false,\r\n      // 是否展开，默认全部展开\r\n      isExpandAll: true,\r\n      // 重新渲染表格状态\r\n      refreshTable: true,\r\n      tableList: [],\r\n\r\n      cptType: null,\r\n      // 查询参数\r\n      queryParams: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n        componentId: null,\r\n        label: null,\r\n        parentId: null,\r\n        value: null,\r\n        color: null,\r\n        visible: null,\r\n        cptType: null,\r\n      },\r\n      // 表单参数\r\n      form: {},\r\n      // 表单校验\r\n      rules: {\r\n        componentId: [\r\n          { required: true, message: \"组件ID不能为空\", trigger: \"blur\" }\r\n        ],\r\n        createBy: [\r\n          { required: true, message: \"创建人不能为空\", trigger: \"blur\" }\r\n        ],\r\n        createTime: [\r\n          { required: true, message: \"创建时间不能为空\", trigger: \"blur\" }\r\n        ],\r\n      }\r\n    };\r\n  },\r\n  created () {\r\n\r\n  },\r\n  methods: {\r\n\r\n    colorStyle (color) {\r\n      console.log(color)\r\n      if (color == null) {\r\n        return null;\r\n      }\r\n      let colorArrays = color.split('@')\r\n      if (colorArrays.length == 1) {\r\n        // return \"{ background:'\" + colorArrays[0] + \"'}\";\r\n        return colorArrays[0];\r\n      } else {\r\n        return 'linear-gradient(to bottom right, ' + colorArrays[0] + ',' + colorArrays[1] + ')'\r\n      }\r\n    },\r\n\r\n    setTitleByType () {\r\n      let cptType = this.cptType;\r\n      switch (cptType) {\r\n        //表格\r\n        case \"TABLE\":\r\n          this.title = '表格数据管理'\r\n          break;\r\n        case \"BAR\":\r\n          this.title = '柱状图数据管理'\r\n          break;\r\n        case \"PIE\":\r\n          this.title = '饼图数据管理'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n    /** 查询【请填写功能名称】列表 */\r\n    getList () {\r\n      this.loading = true;\r\n      listByCptId(this.queryParams).then(response => {\r\n        this.tableList = this.handleTree(response.data, \"id\");;\r\n        this.loading = false;\r\n      });\r\n    },\r\n    cancel () {\r\n      this.open = false;\r\n      this.reset();\r\n    },\r\n    // 表单重置\r\n    reset () {\r\n      this.form = {\r\n        id: null,\r\n        componentId: null,\r\n        label: null,\r\n        parentId: null,\r\n        value: null,\r\n        color: null,\r\n        visible: null,\r\n        createBy: null,\r\n        createTime: null,\r\n        updateBy: null,\r\n        updateTime: null\r\n      };\r\n      this.resetForm(\"form\");\r\n      this.resetForm(\"queryForm\");\r\n\r\n    },\r\n    /** 搜索按钮操作 */\r\n    handleQuery () {\r\n      this.queryParams.pageNum = 1;\r\n      this.getList();\r\n    },\r\n    /** 重置按钮操作 */\r\n    resetQuery () {\r\n      this.resetForm(\"queryForm\");\r\n      this.handleQuery();\r\n    },\r\n    // 多选框选中数据\r\n    handleSelectionChange (selection) {\r\n      this.ids = selection.map(item => item.id)\r\n      this.single = selection.length !== 1\r\n      this.multiple = !selection.length\r\n    },\r\n\r\n\r\n\r\n    /** 新增按钮操作 */\r\n\r\n\r\n    handleAdd (row) {\r\n      let this_ = this;\r\n      let tableDetailRefs = this.$refs.tableDetail;\r\n      tableDetailRefs.reset();\r\n      let componentId = this.queryParams.componentId;\r\n      initTableTreeSelect(componentId).then(response => {\r\n        tableDetailRefs.tableOptions = response.data;\r\n        tableDetailRefs.open = true;\r\n        tableDetailRefs.form.componentId = componentId\r\n        tableDetailRefs.title = \"新增图表数据\";\r\n        tableDetailRefs.cptType = this_.cptType;\r\n      });\r\n\r\n\r\n\r\n    },\r\n    /** 修改按钮操作 */\r\n    handleUpdate (row) {\r\n      this.reset();\r\n      const id = row.id || this.ids\r\n      let tableDetailRefs = this.$refs.tableDetail;\r\n      getInfo(id).then(response => {\r\n        tableDetailRefs.open = true;\r\n        tableDetailRefs.form = response.data;\r\n        tableDetailRefs.title = \"修改图表数据\";\r\n        tableDetailRefs.initColor(tableDetailRefs.form)\r\n\r\n      });\r\n    },\r\n    // /** 提交按钮 */\r\n    // submitForm () {\r\n    //   let _this = this;\r\n    //   this.$refs[\"form\"].validate(valid => {\r\n    //     if (valid) {\r\n    //       if (this.form.id != null) {\r\n    //         updateConfig(this.form).then(response => {\r\n    //           _this.$modal.msgSuccess(\"修改成功\");\r\n    //           _this.open = false;\r\n    //           _this.getList();\r\n    //         });\r\n    //       } else {\r\n    //         addConfig(this.form).then(response => {\r\n    //           _this.$modal.msgSuccess(\"新增成功\");\r\n    //           _this.open = false;\r\n    //           _this.getList();\r\n    //         });\r\n    //       }\r\n    //     }\r\n    //   });\r\n    // },\r\n    /** 删除按钮操作 */\r\n    handleDelete (row) {\r\n      const ids = row.id || this.ids;\r\n      this.$modal.confirm('是否确认删除该数据项？').then(function () {\r\n        return delInfo(ids);\r\n      }).then(() => {\r\n        this.getList();\r\n        this.$modal.msgSuccess(\"删除成功\");\r\n      }).catch(() => { });\r\n    },\r\n    // 节点单击事件\r\n    handleNodeClick (data) {\r\n      getInfo(data.id).then(response => {\r\n        this.form = response.data;\r\n      });\r\n    },\r\n\r\n    /** 展开/折叠操作 */\r\n    toggleExpandAll () {\r\n      this.refreshTable = false;\r\n      this.isExpandAll = !this.isExpandAll;\r\n      this.$nextTick(() => {\r\n        this.refreshTable = true;\r\n      });\r\n    },\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\n.colorBox {\r\n  width: 48px;\r\n  height: 12px;\r\n  display: inline-block;\r\n  border-radius: 2px;\r\n  position: absolute;\r\n}\r\n</style>\r\n"]}]}