{"remainingRequest":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\proj\\project_manage\\project-ui\\src\\views\\config\\legendDetail.vue?vue&type=style&index=0&id=619aa8c1&scoped=true&lang=scss&","dependencies":[{"path":"D:\\work\\proj\\project_manage\\project-ui\\src\\views\\config\\legendDetail.vue","mtime":1663479653277},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1663230084856},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1663230088519},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":1663230086089},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1663230084018},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663230084016},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1663230087832}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouY29sb3JzcGFuIHsNCiAgZmxvYXQ6IGxlZnQ7DQogIG1hcmdpbi1yaWdodDogMjBweDsNCn0NCg0KLmRlbC1zcGFuIHsNCiAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KICBtYXJnaW46IDVweCA4cHg7DQp9DQoNCi5maWx0ZXJNYXhWYWx1ZSB7DQogIDo6di1kZWVwIC5lbC1mb3JtLWl0ZW1fX2NvbnRlbnQgew0KICAgIG1hcmdpbi1sZWZ0OiAwICFpbXBvcnRhbnQ7DQogIH0NCn0NCg=="},{"version":3,"sources":["legendDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgZA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"legendDetail.vue","sourceRoot":"src/views/config","sourcesContent":["<template>\r\n  <!-- <div class=\"app-container\"> -->\r\n  <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"880px\" append-to-body>\r\n    <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"140px\">\r\n      <el-row>\r\n        <el-col :span=\"12\">\r\n          <el-form-item label=\"名称\" prop=\"label\">\r\n            <span slot=\"label\">\r\n              <el-tooltip content=\"展示在图例中的名称\" placement=\"top\">\r\n                <i class=\"el-icon-question\"></i>\r\n              </el-tooltip>\r\n              名称\r\n            </span>\r\n            <el-input v-model=\"form.label\" placeholder=\"请输入标签\" />\r\n          </el-form-item>\r\n        </el-col>\r\n        <el-col :span=\"12\">\r\n          <el-form-item label=\"父节点\" prop=\"parentId\">\r\n            <treeselect\r\n              v-model=\"form.parentId\"\r\n              :options=\"legendOptions\"\r\n              :normalizer=\"normalizer\"\r\n              placeholder=\"选择上级图例\"\r\n            />\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n      <el-row>\r\n        <el-col :span=\"12\">\r\n          <el-form-item label=\"图层名称\" prop=\"layerName\">\r\n            <span slot=\"label\">\r\n              <el-tooltip content=\"图层服务中的名称\" placement=\"top\">\r\n                <i class=\"el-icon-question\"></i>\r\n              </el-tooltip>\r\n              图层名称\r\n            </span>\r\n            <el-input v-model=\"form.layerName\" placeholder=\"请输入图层名称\" />\r\n          </el-form-item>\r\n        </el-col>\r\n\r\n        <el-col :span=\"12\">\r\n          <el-form-item label=\"属性名称\" prop=\"filterKey\">\r\n            <el-input v-model=\"form.filterKey\" placeholder=\"请输属性名称\" />\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n      <el-row>\r\n        <el-col :span=\"12\">\r\n          <el-form-item label=\"属性值\" prop=\"filterValue\">\r\n            <el-input v-model=\"form.filterValue\" placeholder=\"请输属性值\" />\r\n          </el-form-item>\r\n        </el-col>\r\n\r\n        <el-col :span=\"12\">\r\n          <el-form-item label=\"图例颜色\" prop=\"lengendColor\">\r\n            <span class=\"colorspan\">{{ form.lengendColor }}</span>\r\n            <el-color-picker v-model=\"form.lengendColor\"></el-color-picker>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n      <el-row>\r\n        <el-col :span=\"12\">\r\n          <el-form-item label=\"填充颜色\" prop=\"fillColor\">\r\n            <span class=\"colorspan\">{{ form.fillColor }}</span>\r\n            <el-color-picker v-model=\"form.fillColor\"></el-color-picker>\r\n          </el-form-item>\r\n        </el-col>\r\n        <el-col :span=\"12\">\r\n          <el-form-item label=\"线条颜色\" prop=\"strokeColor\">\r\n            <span class=\"colorspan\">{{ form.strokeColor }}</span>\r\n            <el-color-picker v-model=\"form.strokeColor\"></el-color-picker>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n      <el-row>\r\n        <el-col :span=\"12\">\r\n          <el-form-item label=\"宽度\" prop=\"width\">\r\n            <el-input v-model=\"form.width\" placeholder=\"请输入宽度\" />\r\n          </el-form-item>\r\n        </el-col>\r\n\r\n        <el-col :span=\"12\">\r\n          <el-form-item label=\"显示顺序\" prop=\"orderNum\">\r\n            <el-input-number\r\n              v-model=\"form.orderNum\"\r\n              :min=\"1\"\r\n              style=\"width: 280px\"\r\n            />\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n      <el-row>\r\n        <el-col :span=\"12\">\r\n          <el-form-item label=\"虚线间距\" prop=\"dashArray\">\r\n            <el-input v-model=\"form.dashArray\" placeholder=\"请输入虚线间距\" />\r\n          </el-form-item>\r\n        </el-col>\r\n        <el-col :span=\"12\">\r\n          <el-form-item label=\"虚线偏移\" prop=\"dashOffset\">\r\n            <el-input v-model=\"form.dashOffset\" placeholder=\"请输入虚线偏移\" />\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n      <el-row>\r\n        <el-col :span=\"12\" style=\"display: flex\">\r\n          <el-form-item label=\"属性范围\" prop=\"filterMinValue\">\r\n            <el-input\r\n              v-model=\"form.filterMinValue\"\r\n              placeholder=\"请输入最小值\"\r\n              style=\"width: 125px\"\r\n            />\r\n          </el-form-item>\r\n          <span class=\"del-span\">&nbsp;－&nbsp;</span>\r\n\r\n          <el-form-item prop=\"filterMaxValue\" class=\"filterMaxValue\">\r\n            <el-input\r\n              v-model=\"form.filterMaxValue\"\r\n              placeholder=\"请输入最大值\"\r\n              style=\"width: 125px\"\r\n            />\r\n          </el-form-item>\r\n        </el-col>\r\n\r\n        <el-col :span=\"12\">\r\n          <el-form-item label=\"扩展信息\" prop=\"extension\">\r\n            <el-input v-model=\"form.extension\" placeholder=\"请输入扩展信息\" />\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <el-row>\r\n        <el-col :span=\"12\">\r\n          <el-form-item label=\"显示状态\" prop=\"visible\">\r\n            <span slot=\"label\">\r\n              <el-tooltip\r\n                content=\"选择隐藏则不会出现在图例列表中\"\r\n                placement=\"top\"\r\n              >\r\n                <i class=\"el-icon-question\"></i>\r\n              </el-tooltip>\r\n              显示状态\r\n            </span>\r\n            <el-radio-group v-model=\"form.visible\">\r\n              <el-radio\r\n                v-for=\"dict in dict.type.sys_show_hide\"\r\n                :key=\"dict.value\"\r\n                :label=\"dict.value\"\r\n                >{{ dict.label }}</el-radio\r\n              >\r\n            </el-radio-group>\r\n          </el-form-item>\r\n        </el-col>\r\n\r\n        <el-col :span=\"12\">\r\n          <el-form-item label=\"是否同步高亮\" prop=\"highLightMode\">\r\n            <el-switch\r\n              v-model=\"form.highLightMode\"\r\n              active-value=\"Y\"\r\n              inactive-value=\"N\"\r\n            ></el-switch>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n      <!-- <el-row>\r\n        <el-col :span=\"12\">\r\n          <el-form-item label=\"扩展信息\" prop=\"extension\">\r\n            <el-input v-model=\"form.extension\" placeholder=\"请输入扩展信息\" />\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row> -->\r\n    </el-form>\r\n\r\n    <div slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\r\n      <el-button @click=\"cancel\">取 消</el-button>\r\n    </div>\r\n  </el-dialog>\r\n\r\n  <!-- </div> -->\r\n</template>\r\n<script>\r\nimport { getConfig, delConfig, addConfig, updateConfig, initLegendTreeSelect } from \"@/api/config/legend\";\r\nimport Treeselect from \"@riophae/vue-treeselect\";\r\nimport \"@riophae/vue-treeselect/dist/vue-treeselect.css\";\r\nexport default {\r\n  dicts: ['sys_show_hide', 'sys_yes_no'],\r\n  components: { Treeselect },\r\n  name: \"Config\",\r\n  data () {\r\n    return {\r\n      // 遮罩层\r\n      loading: true,\r\n      // 选中数组\r\n      ids: [],\r\n      // 非单个禁用\r\n      single: true,\r\n      // 非多个禁用\r\n      multiple: true,\r\n      // 显示搜索条件\r\n      showSearch: true,\r\n      // 总条数\r\n      total: 0,\r\n      // 【请填写功能名称】表格数据\r\n      configList: [],\r\n      // 弹出层标题\r\n      title: \"\",\r\n      // 是否展示弹框\r\n      open: false,\r\n      addRootLegend: false,\r\n      legendOptions: [],\r\n      // 查询参数\r\n      queryParams: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n        componentId: null,\r\n        label: null,\r\n        parentId: null,\r\n        layerName: null,\r\n        filterKey: null,\r\n        filterValue: null,\r\n        lengendColor: null,\r\n        fillColor: null,\r\n        strokeColor: null,\r\n        width: null,\r\n        dashArray: null,\r\n        dashOffset: null,\r\n        visible: null,\r\n        extension: null,\r\n      },\r\n      // 表单参数\r\n      form: {},\r\n      // 表单校验\r\n      rules: {\r\n        label: [\r\n          { required: true, message: \"图例名称不能为空\", trigger: \"blur\" },\r\n          { min: 1, max: 80, message: '图例名称长度不能超过80', trigger: 'blur' }\r\n        ],\r\n        visible: [\r\n          { required: true, message: \"显示状态不能为空\", trigger: \"blur\" }\r\n        ],\r\n        createTime: [\r\n          { required: true, message: \"创建时间不能为空\", trigger: \"blur\" }\r\n        ],\r\n\r\n        width: [{ type: 'number', message: '请输入有效数字', trigger: 'blur', transform: (value) => Number(value) }],\r\n\r\n\r\n        filterMinValue: [{ type: 'number', message: '请输入有效数字', trigger: 'blur', transform: (value) => Number(value) }],\r\n\r\n        filterMaxValue: [{ type: 'number', message: '请输入有效数字', trigger: 'blur', transform: (value) => Number(value) }],\r\n\r\n\r\n      }\r\n    };\r\n  },\r\n  created () {\r\n    // this.initLegendTreeSelect(this.form.componentId);\r\n  },\r\n  methods: {\r\n\r\n    // 取消按钮\r\n    cancel () {\r\n      this.open = false;\r\n      this.reset();\r\n    },\r\n    // 表单重置\r\n    reset () {\r\n      this.form = {\r\n        id: null,\r\n        componentId: null,\r\n        label: null,\r\n        parentId: null,\r\n        layerName: null,\r\n        filterKey: null,\r\n        filterValue: null,\r\n        lengendColor: null,\r\n        fillColor: null,\r\n        strokeColor: null,\r\n        width: null,\r\n        filterMinValue: null,\r\n        filterMaxValue: null,\r\n        dashArray: null,\r\n        dashOffset: null,\r\n        visible: '0',\r\n        extension: null,\r\n        createBy: null,\r\n        createTime: null,\r\n        updateBy: null,\r\n        updateTime: null,\r\n        delFlag: null,\r\n        orderNum: 1,\r\n        checkStatus: 'Y',\r\n        layerOrderNum: 1\r\n\r\n      };\r\n      this.resetForm(\"form\");\r\n    },\r\n    /** 搜索按钮操作 */\r\n    handleQuery () {\r\n      this.queryParams.pageNum = 1;\r\n      this.getList();\r\n    },\r\n    /** 重置按钮操作 */\r\n    resetQuery () {\r\n      this.resetForm(\"queryForm\");\r\n      this.handleQuery();\r\n    },\r\n    // 多选框选中数据\r\n    handleSelectionChange (selection) {\r\n      this.ids = selection.map(item => item.id)\r\n      this.single = selection.length !== 1\r\n      this.multiple = !selection.length\r\n    },\r\n\r\n    /** 查询菜单下拉树结构 */\r\n    // initLegendTreeSelect () {\r\n    //   initLegendTreeSelect().then(response => {\r\n    //     this.legendOptions = response.data;\r\n    //   });\r\n    // },\r\n\r\n    /** 转换图例数据结构 */\r\n    normalizer (node) {\r\n      if (node.children && !node.children.length) {\r\n        delete node.children;\r\n      }\r\n      return {\r\n        id: node.id,\r\n        label: node.label,\r\n        children: node.children\r\n      };\r\n    },\r\n\r\n    /** 新增按钮操作 */\r\n    handleAdd () {\r\n      this.reset();\r\n      this.openSaveDialog = true;\r\n      this.openLegendList = false;\r\n      this.title = \"添加图例配置\";\r\n\r\n    },\r\n    /** 修改按钮操作 */\r\n    handleUpdate (row) {\r\n      this.reset();\r\n      const id = row.id || this.ids\r\n      getConfig(id).then(response => {\r\n        this.form = response.data;\r\n        this.open = true;\r\n        this.title = \"修改图例配置\";\r\n      });\r\n    },\r\n    /** 提交按钮 */\r\n    submitForm () {\r\n      this.$refs[\"form\"].validate(valid => {\r\n        if (valid) {\r\n          if (this.form.id != null) {\r\n            updateConfig(this.form).then(response => {\r\n              this.$modal.msgSuccess(\"修改成功\");\r\n              this.open = false;\r\n              this.$parent.getList();\r\n            });\r\n          } else {\r\n            addConfig(this.form).then(response => {\r\n              this.$modal.msgSuccess(\"新增成功\");\r\n              this.open = false;\r\n              this.$parent.getList();\r\n            });\r\n          }\r\n        }\r\n      });\r\n    },\r\n    /** 删除按钮操作 */\r\n    handleDelete (row) {\r\n      const ids = row.id || this.ids;\r\n      this.$modal.confirm('是否确认删除该数据项？').then(function () {\r\n        return delConfig(ids);\r\n      }).then(() => {\r\n        this.getList();\r\n        this.$modal.msgSuccess(\"删除成功\");\r\n      }).catch(() => { });\r\n    },\r\n    // 节点单击事件\r\n    handleNodeClick (data) {\r\n      getConfig(data.id).then(response => {\r\n        this.form = response.data;\r\n      });\r\n    },\r\n\r\n    /** 展开/折叠操作 */\r\n    toggleExpandAll () {\r\n      this.refreshTable = false;\r\n      this.isExpandAll = !this.isExpandAll;\r\n      this.$nextTick(() => {\r\n        this.refreshTable = true;\r\n      });\r\n    },\r\n  }\r\n};\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.colorspan {\r\n  float: left;\r\n  margin-right: 20px;\r\n}\r\n\r\n.del-span {\r\n  display: inline-block;\r\n  margin: 5px 8px;\r\n}\r\n\r\n.filterMaxValue {\r\n  ::v-deep .el-form-item__content {\r\n    margin-left: 0 !important;\r\n  }\r\n}\r\n</style>\r\n"]}]}