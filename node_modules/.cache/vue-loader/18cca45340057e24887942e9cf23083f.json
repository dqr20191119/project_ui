{"remainingRequest":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\proj\\project_manage\\project-ui\\src\\views\\config\\tableDetail.vue?vue&type=style&index=0&id=5cc715e8&scoped=true&lang=css&","dependencies":[{"path":"D:\\work\\proj\\project_manage\\project-ui\\src\\views\\config\\tableDetail.vue","mtime":1663479653278},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1663230084856},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1663230088519},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":1663230086089},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663230084016},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1663230087832}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmNvbG9yc3BhbiB7DQogIGZsb2F0OiBsZWZ0Ow0KICBtYXJnaW4tcmlnaHQ6IDIwcHg7DQp9DQo="},{"version":3,"sources":["tableDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+RA;AACA;AACA;AACA","file":"tableDetail.vue","sourceRoot":"src/views/config","sourcesContent":["<template>\r\n  <!-- 添加或修改表格对话框 -->\r\n  <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"880px\" append-to-body>\r\n    <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"140px\">\r\n      <el-row>\r\n        <el-col :span=\"12\">\r\n          <el-form-item label=\"标签名称\" prop=\"label\">\r\n            <el-input v-model=\"form.label\" placeholder=\"请输入标签名称\" />\r\n          </el-form-item>\r\n        </el-col>\r\n        <el-col :span=\"12\">\r\n          <el-form-item label=\"标签值\" prop=\"value\">\r\n            <el-input v-model=\"form.value\" placeholder=\"请输入标签值\" />\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n      <el-row>\r\n        <el-col :span=\"12\">\r\n          <el-form-item label=\"父节点\" prop=\"parentId\">\r\n            <treeselect\r\n              v-model=\"form.parentId\"\r\n              :options=\"tableOptions\"\r\n              :normalizer=\"normalizer\"\r\n              placeholder=\"选择上级图例\"\r\n            />\r\n          </el-form-item>\r\n        </el-col>\r\n\r\n        <el-col :span=\"12\">\r\n          <el-form-item label=\"显示顺序\" prop=\"orderNum\">\r\n            <el-input-number\r\n              v-model=\"form.orderNum\"\r\n              :min=\"1\"\r\n              style=\"width: 280px\"\r\n            />\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <el-col :span=\"12\" v-if=\"cptType != 'TABLE'\">\r\n        <el-form-item label=\"颜色\">\r\n          <span slot=\"label\">\r\n            <el-tooltip\r\n              content=\"支持选择多种颜色，按照选择顺序渐变\"\r\n              placement=\"top\"\r\n            >\r\n              <i class=\"el-icon-question\"></i>\r\n            </el-tooltip>\r\n            颜色\r\n          </span>\r\n\r\n          <el-color-picker show-alpha v-model=\"color1\"></el-color-picker>\r\n          <el-color-picker v-model=\"color2\" show-alpha></el-color-picker>\r\n        </el-form-item>\r\n      </el-col>\r\n    </el-form>\r\n    <div slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\r\n      <el-button @click=\"cancel\">取 消</el-button>\r\n    </div>\r\n  </el-dialog>\r\n\r\n  <!-- </div> -->\r\n</template>\r\n<script>\r\nimport { getInfo, delInfo, addInfo, updateInfo, initTableTreeSelect } from \"@/api/config/table\";\r\nimport Treeselect from \"@riophae/vue-treeselect\";\r\nimport \"@riophae/vue-treeselect/dist/vue-treeselect.css\";\r\n\r\nexport default {\r\n  dicts: ['sys_show_hide', 'sys_yes_no'],\r\n  components: { Treeselect },\r\n  name: \"Config\",\r\n  data () {\r\n    return {\r\n      // 遮罩层\r\n      loading: true,\r\n      // 选中数组\r\n      ids: [],\r\n      // 非单个禁用\r\n      single: true,\r\n      // 非多个禁用\r\n      multiple: true,\r\n      // 显示搜索条件\r\n      showSearch: true,\r\n      // 总条数\r\n      total: 0,\r\n      // 【请填写功能名称】表格数据\r\n      configList: [],\r\n      // 弹出层标题\r\n      title: \"\",\r\n      // 是否展示弹框\r\n      open: false,\r\n      addRootLegend: false,\r\n      tableOptions: [],\r\n      cptType: null,\r\n      colorSplit: '@',\r\n      // 查询参数\r\n      queryParams: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n        componentId: null,\r\n        label: null,\r\n        parentId: null,\r\n        value: null,\r\n        color: null,\r\n        visible: null,\r\n      },\r\n      color1: '',\r\n      color2: '',\r\n      // 表单参数\r\n      form: {\r\n\r\n      },\r\n      // 表单校验\r\n      rules: {\r\n        label: [\r\n          { required: true, message: \"标签名称不能为空\", trigger: \"blur\" },\r\n          { min: 1, max: 80, message: '标签名称长度不能超过48', trigger: 'blur' }\r\n        ],\r\n        visible: [\r\n          { required: true, message: \"显示状态不能为空\", trigger: \"blur\" }\r\n        ]\r\n\r\n      }\r\n    };\r\n  },\r\n  created () {\r\n    // this.initLegendTreeSelect(this.form.componentId);\r\n  },\r\n  methods: {\r\n\r\n    // 取消按钮\r\n    cancel () {\r\n      this.open = false;\r\n      this.reset();\r\n    },\r\n    // 表单重置\r\n    reset () {\r\n      this.color1 = null,\r\n        this.color2 = null,\r\n        this.form = {\r\n          id: null,\r\n          componentId: null,\r\n          label: null,\r\n          parentId: null,\r\n          value: null,\r\n          color: null,\r\n          visible: null,\r\n          createBy: null,\r\n          createTime: null,\r\n          updateBy: null,\r\n          updateTime: null,\r\n          orderNum: 1,\r\n          color1: null,\r\n          color2: null\r\n\r\n        };\r\n      this.resetForm(\"form\");\r\n    },\r\n    /** 搜索按钮操作 */\r\n    handleQuery () {\r\n      this.queryParams.pageNum = 1;\r\n      this.getList();\r\n    },\r\n    /** 重置按钮操作 */\r\n    resetQuery () {\r\n      this.resetForm(\"queryForm\");\r\n      this.handleQuery();\r\n    },\r\n    // 多选框选中数据\r\n    handleSelectionChange (selection) {\r\n      this.ids = selection.map(item => item.id)\r\n      this.single = selection.length !== 1\r\n      this.multiple = !selection.length\r\n    },\r\n\r\n    changeColor1 (val) {\r\n      this.form.color1 = val || ''\r\n    },\r\n\r\n    changeColor2 (val) {\r\n      this.form.color2 = val || ''\r\n    },\r\n\r\n\r\n\r\n    /** 转换图例数据结构 */\r\n    normalizer (node) {\r\n      if (node.children && !node.children.length) {\r\n        delete node.children;\r\n      }\r\n      return {\r\n        id: node.id,\r\n        label: node.label,\r\n        children: node.children\r\n      };\r\n    },\r\n\r\n    /** 新增按钮操作 */\r\n    handleAdd () {\r\n      this.reset();\r\n      this.openSaveDialog = true;\r\n      this.openLegendList = false;\r\n      this.title = \"添加图表配置\";\r\n\r\n    },\r\n\r\n    /** 初始化颜色配置 */\r\n    initColor (form) {\r\n      let color = form.color;\r\n      if (color == null || color == '') {\r\n        return;\r\n      }\r\n      let colorArray = color.split(this.colorSplit)\r\n      if (colorArray.length > 1) {\r\n        this.color1 = colorArray[0]\r\n        this.color2 = colorArray[1]\r\n      } else {\r\n        this.color1 = color\r\n      }\r\n    },\r\n\r\n    /** 组装颜色配置 */\r\n    assembleColor () {\r\n      let color = null;\r\n      if (this.color1) {\r\n        color = this.color1;\r\n      }\r\n      if (this.color2) {\r\n        color = color + this.colorSplit + this.color2\r\n      }\r\n      this.form.color = color;\r\n    },\r\n\r\n    /** 修改按钮操作 */\r\n    handleUpdate (row) {\r\n      this.reset();\r\n      const id = row.id || this.ids\r\n      getInfo(id).then(response => {\r\n        this.form = response.data;\r\n        this.open = true;\r\n        this.title = \"修改图表配置\";\r\n        this.initColor(this.form.color)\r\n      });\r\n    },\r\n    /** 提交按钮 */\r\n    submitForm () {\r\n      this.$refs[\"form\"].validate(valid => {\r\n        this.assembleColor();\r\n        if (valid) {\r\n          if (this.form.id != null) {\r\n            updateInfo(this.form).then(response => {\r\n              this.$modal.msgSuccess(\"修改成功\");\r\n              this.open = false;\r\n              this.$parent.getList();\r\n            });\r\n          } else {\r\n            addInfo(this.form).then(response => {\r\n              this.$modal.msgSuccess(\"新增成功\");\r\n              this.open = false;\r\n              this.$parent.getList();\r\n            });\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    // 节点单击事件\r\n    handleNodeClick (data) {\r\n      getInfo(data.id).then(response => {\r\n        this.form = response.data;\r\n      });\r\n    },\r\n\r\n    /** 展开/折叠操作 */\r\n    toggleExpandAll () {\r\n      this.refreshTable = false;\r\n      this.isExpandAll = !this.isExpandAll;\r\n      this.$nextTick(() => {\r\n        this.refreshTable = true;\r\n      });\r\n    },\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\n.colorspan {\r\n  float: left;\r\n  margin-right: 20px;\r\n}\r\n</style>\r\n"]}]}