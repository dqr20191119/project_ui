{"remainingRequest":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\proj\\project_manage\\project-ui\\src\\views\\config\\index.vue?vue&type=style&index=0&id=074c8b42&scoped=true&lang=scss&","dependencies":[{"path":"D:\\work\\proj\\project_manage\\project-ui\\src\\views\\config\\index.vue","mtime":1663479653277},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1663230084856},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1663230088519},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":1663230086089},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1663230084018},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663230084016},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1663230087832}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5iYW5uZXJIZWlnaHQgew0KICA6OnYtZGVlcCAuZWwtZm9ybS1pdGVtX19jb250ZW50IHsNCiAgICBtYXJnaW4tbGVmdDogMCAhaW1wb3J0YW50Ow0KICB9DQp9DQouZGVsLXNwYW4gew0KICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogIG1hcmdpbjogNXB4IDhweDsNCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappingsw0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/config","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-row :gutter=\"20\">\r\n      <!--部门数据-->\r\n      <el-col :span=\"4\" :xs=\"24\">\r\n        <div class=\"head-container\">\r\n          <el-input\r\n            v-model=\"menuName\"\r\n            placeholder=\"请输入菜单名称\"\r\n            clearable\r\n            size=\"small\"\r\n            prefix-icon=\"el-icon-search\"\r\n            style=\"margin-bottom: 20px\"\r\n          />\r\n        </div>\r\n        <div class=\"head-container\">\r\n          <el-tree\r\n            :data=\"menuOptions\"\r\n            :props=\"defaultProps\"\r\n            :expand-on-click-node=\"false\"\r\n            :filter-node-method=\"filterNode\"\r\n            ref=\"tree\"\r\n            default-expand-all\r\n            highlight-current\r\n            @node-click=\"handleNodeClick\"\r\n          />\r\n        </div>\r\n      </el-col>\r\n      <el-col :span=\"20\" :xs=\"24\">\r\n        <el-form\r\n          :model=\"queryParams\"\r\n          ref=\"queryForm\"\r\n          size=\"small\"\r\n          :inline=\"true\"\r\n          v-show=\"showSearch\"\r\n          label-width=\"68px\"\r\n        >\r\n          <el-form-item label=\"组件名称\" prop=\"cptName\">\r\n            <el-input\r\n              v-model=\"queryParams.cptName\"\r\n              placeholder=\"请输入组件名称\"\r\n              clearable\r\n              @keyup.enter.native=\"handleQuery\"\r\n            />\r\n          </el-form-item>\r\n\r\n          <el-form-item label=\"组件类型\" prop=\"cptType\">\r\n            <el-select v-model=\"queryParams.cptType\" placeholder=\"请选组件类型\">\r\n              <el-option\r\n                v-for=\"dict in dict.type.sys_component_type\"\r\n                :key=\"dict.value\"\r\n                :label=\"dict.label\"\r\n                :value=\"dict.value\"\r\n              ></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n\r\n          <el-form-item label=\"状态\" prop=\"enable\">\r\n            <el-select v-model=\"queryParams.enable\" placeholder=\"请选择状态\">\r\n              <el-option\r\n                v-for=\"dict in dict.type.sys_enable_status\"\r\n                :key=\"dict.value\"\r\n                :label=\"dict.label\"\r\n                :value=\"dict.value\"\r\n              ></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n\r\n          <el-form-item>\r\n            <el-button\r\n              type=\"primary\"\r\n              icon=\"el-icon-search\"\r\n              size=\"mini\"\r\n              @click=\"handleQuery\"\r\n              >搜索</el-button\r\n            >\r\n            <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\"\r\n              >重置</el-button\r\n            >\r\n          </el-form-item>\r\n        </el-form>\r\n\r\n        <el-row :gutter=\"10\" class=\"mb8\">\r\n          <el-col :span=\"1.5\">\r\n            <el-button\r\n              type=\"primary\"\r\n              plain\r\n              icon=\"el-icon-plus\"\r\n              size=\"mini\"\r\n              @click=\"handleAdd\"\r\n              v-hasPermi=\"['config:component:add']\"\r\n              >新增</el-button\r\n            >\r\n          </el-col>\r\n\r\n          <el-col :span=\"1.5\">\r\n            <el-button\r\n              type=\"danger\"\r\n              plain\r\n              icon=\"el-icon-delete\"\r\n              size=\"mini\"\r\n              :disabled=\"multiple\"\r\n              @click=\"handleDelete\"\r\n              v-hasPermi=\"['config:component:remove']\"\r\n              >删除</el-button\r\n            >\r\n          </el-col>\r\n\r\n          <right-toolbar\r\n            :showSearch.sync=\"showSearch\"\r\n            @queryTable=\"getList\"\r\n          ></right-toolbar>\r\n        </el-row>\r\n\r\n        <el-table\r\n          v-loading=\"loading\"\r\n          :data=\"infoList\"\r\n          @selection-change=\"handleSelectionChange\"\r\n        >\r\n          <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\r\n          <el-table-column\r\n            label=\"${comment}\"\r\n            align=\"center\"\r\n            prop=\"id\"\r\n            v-if=\"false\"\r\n          />\r\n          <el-table-column\r\n            label=\"菜单ID\"\r\n            align=\"center\"\r\n            prop=\"menuId\"\r\n            v-if=\"false\"\r\n          />\r\n          <el-table-column\r\n            label=\"轮播图宽度\"\r\n            align=\"center\"\r\n            prop=\"bannerWidth\"\r\n            v-if=\"false\"\r\n          />\r\n          <el-table-column\r\n            label=\"轮播图高度\"\r\n            align=\"center\"\r\n            prop=\"bannerHeight\"\r\n            v-if=\"false\"\r\n          />\r\n\r\n          <el-table-column label=\"菜单名称\" align=\"center\" prop=\"menuName\" />\r\n          <el-table-column\r\n            label=\"组件名称\"\r\n            align=\"center\"\r\n            prop=\"cptName\"\r\n            :show-overflow-tooltip=\"true\"\r\n          />\r\n          <el-table-column label=\"组件类型\" align=\"center\" prop=\"cptType\">\r\n            <template slot-scope=\"scope\">\r\n              <dict-tag\r\n                :options=\"dict.type.sys_component_type\"\r\n                :value=\"scope.row.cptType\"\r\n              />\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"业务类型\" align=\"center\" prop=\"bizTypeDesc\">\r\n            <!-- <template slot-scope=\"scope\">\r\n              <dict-tag\r\n                :options=\"dict.type.sys_cmp_biz_type\"\r\n                :value=\"scope.row.bizType\"\r\n              />\r\n            </template> -->\r\n          </el-table-column>\r\n          <el-table-column label=\"显示排序\" align=\"center\" prop=\"orderNum\" />\r\n          <el-table-column label=\"状态\" align=\"center\" prop=\"enable\">\r\n            <template slot-scope=\"scope\">\r\n              <dict-tag\r\n                :options=\"dict.type.sys_enable_status\"\r\n                :value=\"scope.row.enable\"\r\n              />\r\n            </template>\r\n          </el-table-column>\r\n\r\n          <el-table-column\r\n            label=\"操作\"\r\n            align=\"center\"\r\n            class-name=\"small-padding fixed-width\"\r\n          >\r\n            <template slot-scope=\"scope\">\r\n              <el-button\r\n                size=\"mini\"\r\n                type=\"text\"\r\n                icon=\"el-icon-edit\"\r\n                @click=\"handleUpdate(scope.row)\"\r\n                v-hasPermi=\"['config:component:edit']\"\r\n                >修改</el-button\r\n              >\r\n\r\n              <el-button\r\n                size=\"mini\"\r\n                type=\"text\"\r\n                icon=\"el-icon-circle-check\"\r\n                @click=\"handleCommand('handleSetting', scope.row)\"\r\n                v-hasPermi=\"['config:component:add']\"\r\n                >配置组件</el-button\r\n              >\r\n\r\n              <!-- <el-button\r\n                size=\"mini\"\r\n                type=\"text\"\r\n                icon=\"el-icon-delete\"\r\n                @click=\"handleDelete(scope.row)\"\r\n                v-hasPermi=\"['config:component:remove']\"\r\n                >删除</el-button\r\n              > -->\r\n              <el-dropdown\r\n                size=\"mini\"\r\n                @command=\"(command) => handleCommand(command, scope.row)\"\r\n                v-hasPermi=\"['config:legend:add']\"\r\n              >\r\n                <span class=\"el-dropdown-link\">\r\n                  <i class=\"el-icon-d-arrow-right el-icon--right\"></i>更多\r\n                </span>\r\n                <el-dropdown-menu slot=\"dropdown\">\r\n                  <el-dropdown-item\r\n                    command=\"handleDelete\"\r\n                    icon=\"el-icon-delete\"\r\n                    v-hasPermi=\"['cconfig:component:remove']\"\r\n                    >删除</el-dropdown-item\r\n                  >\r\n                </el-dropdown-menu>\r\n              </el-dropdown>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n\r\n        <pagination\r\n          v-show=\"total > 0\"\r\n          :total=\"total\"\r\n          :page.sync=\"queryParams.pageNum\"\r\n          :limit.sync=\"queryParams.pageSize\"\r\n          @pagination=\"getList\"\r\n        />\r\n      </el-col>\r\n    </el-row>\r\n    <!-- 添加或修改【请填写功能名称】对话框 -->\r\n    <el-dialog\r\n      :title=\"title\"\r\n      :visible.sync=\"open\"\r\n      width=\"850px\"\r\n      heigth=\"500px\"\r\n      append-to-body\r\n    >\r\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"100px\">\r\n        <el-row>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"菜单\" prop=\"menuId\">\r\n              <treeselect\r\n                v-model=\"form.menuId\"\r\n                :options=\"menuOptions\"\r\n                :show-count=\"true\"\r\n                placeholder=\"请选择菜单\"\r\n              />\r\n            </el-form-item>\r\n          </el-col>\r\n\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"组件类型\" prop=\"cptType\">\r\n              <el-select\r\n                :disabled=\"isUpdate\"\r\n                style=\"width: 285px\"\r\n                v-model=\"form.cptType\"\r\n                placeholder=\"组件类型\"\r\n                clearable\r\n              >\r\n                <el-option\r\n                  v-for=\"dict in dict.type.sys_component_type\"\r\n                  :key=\"dict.value\"\r\n                  :label=\"dict.label\"\r\n                  :value=\"dict.value\"\r\n                />\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n        <el-row>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"组件名称\" prop=\"cptName\">\r\n              <el-input v-model=\"form.cptName\" placeholder=\"请输入组件名称\" />\r\n            </el-form-item>\r\n          </el-col>\r\n\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"显示排序\" prop=\"orderNum\">\r\n              <el-input-number\r\n                v-model=\"form.orderNum\"\r\n                :min=\"1\"\r\n                style=\"width: 285px\"\r\n              />\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n        <el-row>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"业务类型\" prop=\"bizType\">\r\n              <treeselect\r\n                v-model=\"form.bizType\"\r\n                :options=\"bizOptions\"\r\n                :show-count=\"true\"\r\n                :normalizer=\"bizNormalizer\"\r\n                placeholder=\"请选业务类型\"\r\n              />\r\n              <!-- <el-select\r\n                style=\"width: 285px\"\r\n                v-model=\"form.bizType\"\r\n                placeholder=\"请选择业务类型\"\r\n                clearable\r\n              >\r\n                <el-option></el-option>\r\n                <el-option\r\n                  v-for=\"dict in dict.type.sys_cmp_biz_type\"\r\n                  :key=\"dict.value\"\r\n                  :label=\"dict.label\"\r\n                  :value=\"dict.value\"\r\n                />\r\n              </el-select> -->\r\n            </el-form-item>\r\n          </el-col>\r\n\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"标题\" prop=\"title\">\r\n              <el-input v-model=\"form.title\" placeholder=\"请输入标题\" />\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n        <el-row>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"状态\" prop=\"enable\">\r\n              <el-select\r\n                v-model=\"form.enable\"\r\n                placeholder=\"状态\"\r\n                clearable\r\n                style=\"width: 285px\"\r\n              >\r\n                <el-option\r\n                  v-for=\"dict in dict.type.sys_enable_status\"\r\n                  :key=\"dict.value\"\r\n                  :label=\"dict.label\"\r\n                  :value=\"dict.value\"\r\n                />\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"备注\" prop=\"remark\">\r\n              <el-input v-model=\"form.remark\" placeholder=\"请输入备注\" />\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n        <el-col :span=\"12\" v-if=\"form.cptType == 'BAR'\">\r\n          <el-form-item label=\"柱状图方向\" prop=\"tableDirection\">\r\n            <el-select\r\n              style=\"width: 285px\"\r\n              v-model=\"form.tableDirection\"\r\n              placeholder=\"请选择柱状图方向\"\r\n              clearable\r\n            >\r\n              <el-option></el-option>\r\n              <el-option\r\n                v-for=\"dict in dict.type.sys_table_direction\"\r\n                :key=\"dict.value\"\r\n                :label=\"dict.label\"\r\n                :value=\"dict.value\"\r\n              />\r\n            </el-select>\r\n          </el-form-item>\r\n        </el-col>\r\n\r\n        <el-col\r\n          :span=\"12\"\r\n          v-if=\"form.cptType == 'BANNER'\"\r\n          style=\"display: flex\"\r\n        >\r\n          <el-form-item label=\"轮播图尺寸\" prop=\"bannerSize\">\r\n            <el-input\r\n              :readonly=\"isUpdate\"\r\n              v-model=\"form.bannerWidth\"\r\n              placeholder=\"请输入宽度\"\r\n              style=\"width: 133px\"\r\n            />\r\n          </el-form-item>\r\n          <span class=\"del-span\"> x </span>\r\n\r\n          <el-form-item prop=\"bannerHeight\" class=\"bannerHeight\">\r\n            <el-input\r\n              :readonly=\"isUpdate\"\r\n              v-model=\"form.bannerHeight\"\r\n              placeholder=\"请输入高度\"\r\n              style=\"width: 133px\"\r\n            />\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\r\n        <el-button @click=\"cancel\">取 消</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <LegendList ref=\"legendList\"></LegendList>\r\n    <TableList ref=\"tableList\"></TableList>\r\n    <TxtList ref=\"txtList\"></TxtList>\r\n    <BannerList ref=\"bannerList\"></BannerList>\r\n    <FileList ref=\"fileList\"></FileList>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { listInfo, getInfo, delInfo, addInfo, updateInfo } from \"@/api/config/component\";\r\nimport { treeselect } from \"@/api/system/menu\";\r\nimport Treeselect from \"@riophae/vue-treeselect\";\r\nimport \"@riophae/vue-treeselect/dist/vue-treeselect.css\";\r\nimport LegendList from './legendList.vue';\r\nimport TableList from './tableList.vue'\r\nimport TxtList from './txtList.vue'\r\nimport BannerList from \"./bannerList.vue\";\r\nimport FileList from \"./fileList.vue\";\r\nimport { bizTreeSelect } from \"@/api/decision-manage/decision\";\r\n\r\n\r\nexport default {\r\n  name: \"Info\",\r\n  dicts: ['sys_enable_status', 'sys_component_type', 'sys_table_direction'],\r\n  components: { Treeselect, LegendList, TableList, TxtList, BannerList, FileList },\r\n\r\n  data () {\r\n\r\n    // 柱状图类型必须选择柱状图方向\r\n    var validateDirection = (rule, value, callback) => {\r\n      let cptType = this.form.cptType;\r\n      if ((value == '' || value == null) && cptType == 'BAR') {\r\n        callback(new Error('请选择柱状图方向'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n\r\n    // 轮播图类型必须输入宽度及高度\r\n    var validateBannerWidth = (rule, value, callback) => {\r\n      let cptType = this.form.cptType;\r\n      if (cptType != 'BANNER') {\r\n        return;\r\n      }\r\n      if (value == '' || value == null) {\r\n        callback(new Error('请输入轮播图宽度'));\r\n      } else if (isNaN(value)) {\r\n        callback(new Error('轮播图宽度数据格式有误'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n\r\n    // 轮播图类型必须输入宽度及高度\r\n    var validateBannerHeight = (rule, value, callback) => {\r\n      let cptType = this.form.cptType;\r\n      if (cptType != 'BANNER') {\r\n        return;\r\n      }\r\n      if (value == '' || value == null) {\r\n        callback(new Error('请输入轮播图高度'));\r\n        return false;\r\n      } else if (isNaN(value)) {\r\n        callback(new Error('轮播图高度数据格式有误'));\r\n        return false;\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n\r\n\r\n\r\n    return {\r\n      // 遮罩层\r\n      loading: true,\r\n      // 选中数组\r\n      ids: [],\r\n      // 非单个禁用\r\n      single: true,\r\n      // 非多个禁用\r\n      multiple: true,\r\n      // 显示搜索条件\r\n      showSearch: true,\r\n      // 总条数\r\n      total: 0,\r\n      // 【请填写功能名称】表格数据\r\n      infoList: [],\r\n      // 弹出层标题\r\n      title: \"\",\r\n      // 是否显示弹出层\r\n      open: false,\r\n      isUpdate: false,\r\n      bizOptions: [],\r\n      // 查询参数\r\n      queryParams: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n        cptName: null,\r\n        bizType: null,\r\n        cptType: null,\r\n        menuId: null,\r\n        menuName: null,\r\n        orderNum: null,\r\n      },\r\n      // 菜单名称\r\n      menuName: undefined,\r\n      // 菜单树选项\r\n      menuOptions: undefined,\r\n      defaultProps: {\r\n        children: \"children\",\r\n        label: \"label\"\r\n      },\r\n      // 表单参数\r\n      form: {},\r\n      // 表单校验\r\n      rules: {\r\n        cptName: [\r\n          { required: true, message: \"组件名称不能为空\", trigger: \"blur\" },\r\n          {\r\n            min: 1, max: 80, message: '组件名称长度不能超过80', trigger: 'blur'\r\n          }\r\n        ],\r\n\r\n        menuId: [\r\n          { required: true, message: \"菜单不能为空\", trigger: \"blur\" }\r\n        ],\r\n        cptType: [\r\n          { required: true, message: \"组件类型不能为空\", trigger: \"blur\" }\r\n        ],\r\n        enable: [\r\n          { required: true, message: \"状态不能为空\", trigger: \"blur\" }\r\n        ],\r\n        remark: [\r\n\r\n          {\r\n            min: 1, max: 80, message: '备注长度不能超过80', trigger: 'blur'\r\n          }\r\n        ],\r\n        title: [\r\n          {\r\n            min: 1, max: 80, message: '标题长度不能超过80', trigger: 'blur'\r\n          }\r\n        ],\r\n        tableDirection: [\r\n          { validator: validateDirection, trigger: 'blur' }\r\n        ],\r\n        bannerWidth: [\r\n          { validator: validateBannerWidth, trigger: 'blur' }\r\n        ],\r\n        bannerHeight: [\r\n          { validator: validateBannerHeight, trigger: 'blur' }\r\n        ]\r\n\r\n\r\n\r\n\r\n\r\n      }\r\n    };\r\n  },\r\n  watch: {\r\n    // 根据名称筛选菜单树\r\n    menuName (val) {\r\n      this.$refs.tree.filter(val);\r\n    }\r\n  },\r\n  created () {\r\n    //初始化菜单树\r\n    this.getTreeselect();\r\n    //初始化业务类型树\r\n    this.bizTreeSelect();\r\n\r\n    this.getList();\r\n  },\r\n  methods: {\r\n    /** 查询【请填写功能名称】列表 */\r\n    getList () {\r\n      this.loading = true;\r\n      listInfo(this.queryParams).then(response => {\r\n        this.infoList = response.rows;\r\n        this.total = response.total;\r\n        this.loading = false;\r\n      });\r\n    },\r\n    // 取消按钮\r\n    cancel () {\r\n      this.open = false;\r\n      this.reset();\r\n    },\r\n    // 表单重置\r\n    reset () {\r\n      this.form = {\r\n        id: null,\r\n        cptName: null,\r\n        bizType: null,\r\n        cptType: null,\r\n        menuId: null,\r\n        menuName: null,\r\n        orderNum: null,\r\n        remark: null,\r\n        title: null,\r\n        createBy: null,\r\n        createTime: null,\r\n        updateBy: null,\r\n        enable: '1',\r\n        updateTime: null,\r\n        delFlag: null,\r\n        menuId: this.menuId,\r\n        menuName: this.menuName,\r\n        tableDirection: null,\r\n        bannerHeight: null,\r\n        bannerWidth: null\r\n      };\r\n      this.resetForm(\"form\");\r\n    },\r\n\r\n    // 筛选节点\r\n    filterNode (value, data) {\r\n      if (!value) return true;\r\n      return data.label.indexOf(value) !== -1;\r\n    },\r\n    // 节点单击事件\r\n    handleNodeClick (data) {\r\n      this.queryParams.menuId = data.id;\r\n      this.form.menuId = data.id;\r\n      this.form.menuName = data.label;\r\n      this.handleQuery();\r\n    },\r\n    /** 查询菜单下拉树结构 */\r\n    getTreeselect () {\r\n      treeselect().then(response => {\r\n        let responseData = response.data;\r\n        if (responseData != null) {\r\n          this.menuOptions = responseData.filter(item => (item.groupType == 'F' && item.tenantCode == 'DECISION'))\r\n        }\r\n      });\r\n    },\r\n\r\n    // 更多操作触发\r\n    handleCommand (command, row) {\r\n      switch (command) {\r\n        case \"handleSetting\":\r\n          this.handleSetting(row);\r\n          break;\r\n        case \"handleDelete\":\r\n          this.handleDelete(row)\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n\r\n    /** 搜索按钮操作 */\r\n    handleQuery () {\r\n      this.queryParams.pageNum = 1;\r\n      this.getList();\r\n    },\r\n    /** 重置按钮操作 */\r\n    resetQuery () {\r\n      this.resetForm(\"queryForm\");\r\n      this.handleQuery();\r\n    },\r\n    // 多选框选中数据\r\n    handleSelectionChange (selection) {\r\n      this.ids = selection.map(item => item.id)\r\n      this.single = selection.length !== 1\r\n      this.multiple = !selection.length\r\n    },\r\n    /** 新增按钮操作 */\r\n    handleAdd () {\r\n      this.reset();\r\n      this.open = true;\r\n      this.isUpdate = false;\r\n      this.title = \"添加组件信息\";\r\n    },\r\n    /** 修改按钮操作 */\r\n    handleUpdate (row) {\r\n      this.reset();\r\n      this.isUpdate = true;\r\n      const id = row.id || this.ids\r\n      getInfo(id).then(response => {\r\n        this.form = response.data;\r\n        this.open = true;\r\n        this.title = \"修改组件信息\";\r\n      });\r\n    },\r\n\r\n    handleSetting (row) {\r\n      let cptType = row.cptType;\r\n      switch (cptType) {\r\n        //图例\r\n        case \"LEGEND\":\r\n          this.initLegendList(row);\r\n          break;\r\n        //表格\r\n        case \"TABLE\": case \"BAR\": case \"PIE\": case \"MBAR\":\r\n          this.initTableList(row, cptType);\r\n          break;\r\n        //表格\r\n        case \"TEXT\":\r\n          this.initTxtDetail(row);\r\n          break;\r\n        //轮播\r\n        case \"BANNER\":\r\n          this.initBannerList(row);\r\n          break;\r\n        //文件\r\n        case \"FILE\":\r\n          this.initFileList(row)\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n    },\r\n\r\n    initFileList (row) {\r\n      let fileListRefs = this.$refs.fileList;\r\n      fileListRefs.open = true;\r\n      fileListRefs.queryParams.componentId = row.id\r\n\r\n    },\r\n\r\n    //初始化图例列表页面\r\n    initLegendList (row) {\r\n      let lengedListRefs = this.$refs.legendList;\r\n      lengedListRefs.open = true;\r\n      lengedListRefs.queryParams.componentId = row.id\r\n      lengedListRefs.getList();\r\n    },\r\n\r\n    //初始化表格列表\r\n    initTableList (row, cptType) {\r\n      let tableListRefs = this.$refs.tableList;\r\n      tableListRefs.open = true;\r\n      tableListRefs.queryParams.componentId = row.id\r\n      tableListRefs.cptType = cptType\r\n      //初始化标题\r\n      tableListRefs.setTitleByType();\r\n      //查询列表\r\n      tableListRefs.getList();\r\n    },\r\n\r\n    //初始化轮播组件列表\r\n    initBannerList (row, cptType) {\r\n      let bannerListRefs = this.$refs.bannerList;\r\n      bannerListRefs.open = true;\r\n      bannerListRefs.queryParams.componentId = row.id\r\n      bannerListRefs.cptType = cptType\r\n      if (row.bannerWidth && row.bannerHeight) {\r\n        bannerListRefs.imageRation = row.bannerWidth / row.bannerHeight\r\n        bannerListRefs.miniImageHeight = bannerListRefs.miniImageWidth / bannerListRefs.imageRation\r\n        bannerListRefs.bannerWidth = row.bannerWidth;\r\n        bannerListRefs.bannerHeight = row.bannerHeight;\r\n\r\n      } else {\r\n        bannerListRefs.miniImageHeight = 120;\r\n      }\r\n\r\n      //查询列表\r\n      bannerListRefs.getList();\r\n    },\r\n\r\n    initTxtDetail (row) {\r\n      let txtListRefs = this.$refs.txtList;\r\n      txtListRefs.open = true;\r\n      txtListRefs.form.componentId = row.id\r\n      txtListRefs.handleUpdate(row.id);\r\n    },\r\n\r\n\r\n    /** 提交按钮 */\r\n    submitForm () {\r\n      this.$refs[\"form\"].validate(valid => {\r\n        if (valid) {\r\n          if (this.form.id != null) {\r\n            updateInfo(this.form).then(response => {\r\n              this.$modal.msgSuccess(\"修改成功\");\r\n              this.open = false;\r\n              this.queryParams.menuId = this.form.menuId;\r\n              this.getList();\r\n            });\r\n          } else {\r\n            addInfo(this.form).then(response => {\r\n              this.queryParams.menuId = this.form.menuId;\r\n              this.$modal.msgSuccess(\"新增成功\");\r\n              this.open = false;\r\n              this.getList();\r\n            });\r\n          }\r\n        }\r\n      });\r\n    },\r\n    /** 删除按钮操作 */\r\n    handleDelete (row) {\r\n      const ids = row.id || this.ids;\r\n      this.$modal.confirm('是否确认删除组件数据项？').then(function () {\r\n        return delInfo(ids);\r\n      }).then(() => {\r\n        this.getList();\r\n        this.$modal.msgSuccess(\"删除成功\");\r\n      }).catch(() => { });\r\n    },\r\n    /** 导出按钮操作 */\r\n    handleExport () {\r\n      this.download('system/info/export', {\r\n        ...this.queryParams\r\n      }, `info_${new Date().getTime()}.xlsx`)\r\n    },\r\n\r\n    /** 查询菜单树结构 */\r\n    bizTreeSelect () {\r\n      bizTreeSelect().then(response => {\r\n        let responseData = response.data;\r\n        if (responseData) {\r\n          this.bizOptions = response.data;\r\n        }\r\n      });\r\n    },\r\n\r\n    /** 转换图例数据结构 */\r\n    bizNormalizer (node) {\r\n      if (node.children && !node.children.length) {\r\n        delete node.children;\r\n      }\r\n      return {\r\n        id: node.id,\r\n        label: node.name,\r\n        children: node.children\r\n      };\r\n    },\r\n\r\n  }\r\n};\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.bannerHeight {\r\n  ::v-deep .el-form-item__content {\r\n    margin-left: 0 !important;\r\n  }\r\n}\r\n.del-span {\r\n  display: inline-block;\r\n  margin: 5px 8px;\r\n}\r\n</style>\r\n"]}]}