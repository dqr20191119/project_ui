{"remainingRequest":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\proj\\project_manage\\project-ui\\src\\layout\\components\\Sidebar\\index.vue?vue&type=style&index=0&id=33ec43fc&scoped=true&lang=css&","dependencies":[{"path":"D:\\work\\proj\\project_manage\\project-ui\\src\\layout\\components\\Sidebar\\index.vue","mtime":1663479653264},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1663230084856},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1663230088519},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":1663230086089},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663230084016},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1663230087832}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5lbC1tZW51LS1ob3Jpem9udGFsIC9kZWVwLyAuZWwtbWVudS0tcG9wdXAgew0KICAgIHBhZGRpbmc6IDAuMTg3NXJlbSFpbXBvcnRhbnQ7DQp9DQouZWwtc2Nyb2xsYmFyew0KICBtYXJnaW4tbGVmdDogNy42MjVyZW07DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/layout/components/Sidebar","sourcesContent":["<template>\r\n  <el-scrollbar wrap-class=\"scrollbar-wrapper\">\r\n    <el-menu\r\n      :default-active=\"activeMenu\"\r\n      :background-color=\"variables.menuBg\"\r\n      :text-color=\"variables.menuText\"\r\n      :active-text-color=\"variables.menuActiveText\"\r\n      style=\"background:none;display: flex\"\r\n      mode=\"horizontal\">\r\n \r\n      <sidebar-item\r\n        v-for=\"route in topbarRouters\"\r\n        :key=\"route.path\"\r\n        :item=\"route\"\r\n        :base-path=\"route.path\"/>\r\n    </el-menu>\r\n  </el-scrollbar>\r\n \r\n</template>\r\n \r\n<script>\r\n  import {mapGetters} from 'vuex'\r\n  import SidebarItem from './SidebarItem'\r\n  import variables from \"@/assets/styles/variables.scss\";\r\n \r\n  export default {\r\n    name: 'Sidebar',\r\n    components: {SidebarItem},\r\n    computed: {\r\n      ...mapGetters([\r\n        'permission_routes',\r\n        'sidebar'\r\n      ]),\r\n      activeMenu() {\r\n        const route = this.$route\r\n        const {meta, path} = route\r\n        // if set path, the sidebar will highlight the path you set\r\n        if (meta.activeMenu) {\r\n          return meta.activeMenu\r\n        }\r\n        return path\r\n      },\r\n      showLogo() {\r\n        return this.$store.state.settings.sidebarLogo\r\n      },\r\n      variables() {\r\n        return variables\r\n      },\r\n      isCollapse() {\r\n        return !this.sidebar.opened\r\n      }\r\n    },\r\n    data(){\r\n        return{\r\n            topbarRouters:[]\r\n        }\r\n    \r\n    },\r\n     created () {\r\n        this.permission_routes.forEach(e => {\r\n            if(e.groupType){\r\n              if(e.groupType=='F'){\r\n                this.topbarRouters.push(e)\r\n              }\r\n            }else{\r\n                this.topbarRouters.push(e)\r\n            }\r\n        });\r\n    }\r\n  }\r\n</script>\r\n<style scoped>\r\n.el-menu--horizontal /deep/ .el-menu--popup {\r\n    padding: 0.1875rem!important;\r\n}\r\n.el-scrollbar{\r\n  margin-left: 7.625rem;\r\n}\r\n</style>"]}]}