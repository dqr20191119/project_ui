{"remainingRequest":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\proj\\project_manage\\project-ui\\src\\views\\system\\dept\\index2.vue?vue&type=style&index=0&id=0a4cfb64&scoped=true&lang=css&","dependencies":[{"path":"D:\\work\\proj\\project_manage\\project-ui\\src\\views\\system\\dept\\index2.vue","mtime":1663665566701},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1663230084856},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1663230088519},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":1663230086089},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663230084016},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1663230087832}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm9wdGlvbi1jYXJkLWJ1dHRvbiB7CiAgd2lkdGg6IDEwMCU7CiAgbWFyZ2luLWxlZnQ6IDA7CiAgZm9udC1zaXplOiAxMHB4OwogIGJvcmRlci1yYWRpdXM6IDA7CiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgaGVpZ2h0OiAyMHB4OwogIGxpbmUtaGVpZ2h0OiAxMHB4Owp9Cg=="},{"version":3,"sources":["index2.vue"],"names":[],"mappingsswBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index2.vue","sourceRoot":"src/views/system/dept","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-row :gutter=\"20\">\n      <!--部门数据-->\n\n      <el-col :span=\"4\" :xs=\"24\">\n        <div class=\"head-container\">\n          <el-input\n            v-model=\"deptName\"\n            placeholder=\"请输入部门名称\"\n            clearable\n            size=\"small\"\n            prefix-icon=\"el-icon-search\"\n            style=\"margin-bottom: 20px\"\n          />\n        </div>\n\n        <div\n          :style=\"{\n            'z-index': 9999,\n            position: 'fixed',\n            left: optionCardX + 'px',\n            top: optionCardY + 'px',\n            width: '100px',\n            background: 'white',\n            'box-shadow':\n              '0 2px 4px rgba(0, 0, 0, .12), 0 0 6px rgba(0, 0, 0, .04)'\n          }\"\n          v-show=\"optionCardShow\"\n          id=\"option-button-group\"\n        >\n          <el-button\n            @click=\"addDept()\"\n            v-if=\"node != null && node.level == 1\"\n            class=\"option-card-button\"\n            >新增单位\n          </el-button>\n          <el-button\n            v-if=\"node != null && node.level > 1\"\n            @click=\"addDept()\"\n            class=\"option-card-button\"\n            >新增部门\n          </el-button>\n          <el-button\n            @click=\"removeDept\"\n            v-if=\"node != null && node.level != 1\"\n            class=\"option-card-button\"\n            >删除节点\n          </el-button>\n          <el-button @click=\"editDept\" class=\"option-card-button\"\n            >编辑节点\n          </el-button>\n          <el-button @click=\"up\" class=\"option-card-button\">上移 </el-button>\n          <el-button @click=\"down\" class=\"option-card-button\">下移 </el-button>\n          <el-button @click=\"expandAll\" class=\"option-card-button\"\n            >展开所有</el-button\n          >\n          <el-button @click=\"cuttleAll\" class=\"option-card-button\"\n            >收起所有</el-button\n          >\n        </div>\n\n        <div class=\"head-container\">\n          <el-tree\n            :data=\"deptOptions\"\n            @node-contextmenu=\"handleContextMenu\"\n            :props=\"defaultProps\"\n            :expand-on-click-node=\"false\"\n            :filter-node-method=\"filterNode\"\n            ref=\"treeNode\"\n            icon-class=\"el-icon-folder-opened\"\n            :default-expand-all=\"expandALL\"\n            highlight-current\n            @node-click=\"handleNodeClick\"\n          />\n        </div>\n      </el-col>\n\n      <!--用户数据-->\n      <el-col :span=\"20\" :xs=\"24\">\n        <el-form\n          :model=\"queryParams\"\n          ref=\"queryForm\"\n          size=\"small\"\n          :inline=\"true\"\n          v-show=\"showSearch\"\n          label-width=\"68px\"\n        >\n          <el-form-item label=\"姓名\" prop=\"nickName\">\n            <el-input\n              v-model=\"queryParams.nickName\"\n              placeholder=\"请输入姓名\"\n              clearable\n              style=\"width: 240px\"\n              @keyup.enter.native=\"handleQuery\"\n            />\n          </el-form-item>\n          <el-form-item>\n            <el-button\n              type=\"primary\"\n              icon=\"el-icon-search\"\n              size=\"mini\"\n              @click=\"handleQuery\"\n              >搜索</el-button\n            >\n            <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\"\n              >重置</el-button\n            >\n          </el-form-item>\n        </el-form>\n\n        <el-row :gutter=\"10\" class=\"mb8\">\n          <el-col :span=\"1.5\">\n            <el-button\n              type=\"primary\"\n              plain\n              icon=\"el-icon-plus\"\n              size=\"mini\"\n              @click=\"handleAdd\"\n              v-hasPermi=\"['system:user:add']\"\n              >新增人员</el-button\n            >\n          </el-col>\n          <right-toolbar\n            :showSearch.sync=\"showSearch\"\n            @queryTable=\"getList\"\n            :columns=\"columns\"\n          ></right-toolbar>\n        </el-row>\n\n        <el-table\n          v-loading=\"loading\"\n          :data=\"userList\"\n          @selection-change=\"handleSelectionChange\"\n        >\n          <el-table-column label=\"排序号\" align=\"center\" key=\"orderNum\" prop=\"orderNum\" v-if=\"columns[0].visible\"/>\n          <el-table-column label=\"姓名\" align=\"center\" key=\"nickName\" rop=\"nickName\" v-if=\"columns[1].visible\" :show-overflow-tooltip=\"true\"/>\n          <el-table-column label=\"所属部门\" align=\"center\" key=\"deptName\" prop=\"dept.deptName\" v-if=\"columns[2].visible\" :show-overflow-tooltip=\"true\" />\n          <el-table-column label=\"登录名\" align=\"center\" key=\"userName\" prop=\"userName\" v-if=\"columns[3].visible\" :show-overflow-tooltip=\"true\"/>\n          <el-table-column label=\"手机号码\" align=\"center\" key=\"phonenumber\" prop=\"phonenumber\" v-if=\"columns[4].visible\" width=\"120\" />\n          <el-table-column label=\"所属岗位\" align=\"center\" key=\"postIds\" prop=\"postIds\" v-if=\"columns[5].visible\" :show-overflow-tooltip=\"true\" />\n          <el-table-column label=\"操作\" align=\"center\" width=\"160\" class-name=\"small-padding fixed-width\" >\n            <template slot-scope=\"scope\" v-if=\"scope.row.userId !== 1\">\n              <el-button size=\"mini\" type=\"text\" icon=\"el-icon-edit\" @click=\"handleUpdate(scope.row)\" v-hasPermi=\"['system:user:edit']\" >修改</el-button>\n              <el-button\n                size=\"mini\"\n                type=\"text\"\n                icon=\"el-icon-delete\"\n                @click=\"handleDelete(scope.row)\"\n                v-hasPermi=\"['system:user:remove']\"\n                >删除</el-button\n              >\n            </template>\n          </el-table-column>\n        </el-table>\n\n        <pagination\n          v-show=\"total > 0\"\n          :total=\"total\"\n          :page.sync=\"queryParams.pageNum\"\n          :limit.sync=\"queryParams.pageSize\"\n          @pagination=\"getList\"\n        />\n      </el-col>\n    </el-row>\n\n    <!--添加或修改组织机构-->\n    <DeptDetail ref=\"deptDetail\"></DeptDetail>\n\n    <!-- 添加或修改用户配置对话框 -->\n    <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"750px\" append-to-body>\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"150px\">\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item label=\"姓名\" prop=\"nickName\">\n              <el-input\n                v-model=\"form.nickName\"\n                placeholder=\"请输入姓名\"\n                maxlength=\"30\"\n              />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"排序号\" prop=\"orderNum\">\n              <el-input-number v-model=\"form.orderNum\" :min=\"0\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item label=\"所属部门\" prop=\"deptId\">\n              <treeselect\n                v-model=\"form.deptId\"\n                :options=\"deptOptions\"\n                :show-count=\"true\"\n                placeholder=\"请选择归属部门\"\n              />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n\n            <el-form-item label=\"所属岗位\">\n              <el-select\n                v-model=\"form.postIds\"\n                multiple\n                placeholder=\"请选择岗位\"\n              >\n                <el-option\n                  v-for=\"item in postOptions\"\n                  :key=\"item.postId\"\n                  :label=\"item.postName\"\n                  :value=\"item.postId\"\n                  :disabled=\"item.status == 1\"\n                ></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item label=\"手机号码\" prop=\"phonenumber\">\n              <el-input\n                v-model=\"form.phonenumber\"\n                placeholder=\"请输入手机号码\"\n                maxlength=\"11\"\n              />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"办公电话\" prop=\"officeNumber\">\n              <el-input\n                v-model=\"form.officeNumber\"\n                placeholder=\"请输入办公电话\"\n                maxlength=\"11\"\n              />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item v-if=\"form.userId == undefined\" label=\"登录名\" prop=\"userName\">\n              <el-input v-model=\"form.userName\" placeholder=\"请输入登录名\" maxlength=\"30\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item v-if=\"form.userId == undefined\" label=\"用户密码\" prop=\"password\">\n              <el-input v-model=\"form.password\" placeholder=\"请输入用户密码\" type=\"password\" maxlength=\"20\" show-password/>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item label=\"用户性别\">\n              <el-select v-model=\"form.sex\" placeholder=\"请选择性别\">\n                <el-option\n                  v-for=\"dict in dict.type.sys_user_sex\"\n                  :key=\"dict.value\"\n                  :label=\"dict.label\"\n                  :value=\"dict.value\"\n                ></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n\n          <el-col :span=\"12\">\n            <el-form-item label=\"邮箱地址\" prop=\"email\">\n              <el-input v-model=\"form.email\" placeholder=\"请输入邮箱地址\" maxlength=\"50\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"24\">\n            <el-form-item label=\"是否为机构负责人\">\n              <el-checkbox v-model=\"form.isPrincipal\"></el-checkbox>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"24\">\n            <el-form-item label=\"备注\">\n              <el-input\n                v-model=\"form.remark\"\n                type=\"textarea\"\n                placeholder=\"请输入内容\"\n              ></el-input>\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"resetPwdForm\">重置密码</el-button>\n        <el-button type=\"primary\" @click=\"deleteForm\">删 除</el-button>\n        <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n        <el-button @click=\"cancel\">取 消</el-button>\n      </div>\n    </el-dialog>\n\n    <!-- 用户导入对话框 -->\n    <el-dialog\n      :title=\"upload.title\"\n      :visible.sync=\"upload.open\"\n      width=\"400px\"\n      append-to-body\n    >\n      <el-upload\n        ref=\"upload\"\n        :limit=\"1\"\n        accept=\".xlsx, .xls\"\n        :headers=\"upload.headers\"\n        :action=\"upload.url + '?updateSupport=' + upload.updateSupport\"\n        :disabled=\"upload.isUploading\"\n        :on-progress=\"handleFileUploadProgress\"\n        :on-success=\"handleFileSuccess\"\n        :auto-upload=\"false\"\n        drag\n      >\n        <i class=\"el-icon-upload\"></i>\n        <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\n        <div class=\"el-upload__tip text-center\" slot=\"tip\">\n          <div class=\"el-upload__tip\" slot=\"tip\">\n            <el-checkbox v-model=\"upload.updateSupport\" />\n            是否更新已经存在的用户数据\n          </div>\n          <span>仅允许导入xls、xlsx格式文件。</span>\n          <el-link\n            type=\"primary\"\n            :underline=\"false\"\n            style=\"font-size: 12px; vertical-align: baseline\"\n            @click=\"importTemplate\"\n            >下载模板</el-link\n          >\n        </div>\n      </el-upload>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"submitFileForm\">确 定</el-button>\n        <el-button @click=\"upload.open = false\">取 消</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { listUser, getUser, delUser, addUser, updateUser, resetUserPwd, changeUserStatus } from \"@/api/system/user\";\nimport { getToken } from \"@/utils/auth\";\nimport { treeselect } from \"@/api/system/dept\";\nimport Treeselect from \"@riophae/vue-treeselect\";\nimport \"@riophae/vue-treeselect/dist/vue-treeselect.css\";\nimport DeptDetail from './deptDetail.vue';\n\n\nexport default {\n  name: \"User\",\n  dicts: ['sys_normal_disable', 'sys_user_sex'],\n  components: { Treeselect, DeptDetail },\n  data () {\n    return {\n      // 遮罩层\n      loading: true,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 总条数\n      total: 0,\n\n\n\n      expandALL: true,\n      // 用户表格数据\n      userList: null,\n      // 弹出层标题\n      title: \"\",\n      // 部门树选项\n      deptOptions: undefined,\n      optionCardShow: false,\n      optionCardX: null,\n      optionCardY: null,\n      node: null,\n      // 是否显示弹出层\n      open: false,\n      // 部门名称\n      deptName: undefined,\n      // 默认密码\n      initPassword: undefined,\n      // 日期范围\n      dateRange: [],\n      // 岗位选项\n      postOptions: [],\n      // 角色选项\n      roleOptions: [],\n      // 表单参数\n      form: {},\n      defaultProps: {\n        children: \"children\",\n        label: \"label\"\n      },\n      // 用户导入参数\n      upload: {\n        // 是否显示弹出层（用户导入）\n        open: false,\n        // 弹出层标题（用户导入）\n        title: \"\",\n        // 是否禁用上传\n        isUploading: false,\n        // 是否更新已经存在的用户数据\n        updateSupport: 0,\n        // 设置上传的请求头部\n        headers: { Authorization: \"Bearer \" + getToken() },\n        // 上传的地址\n        url: process.env.VUE_APP_BASE_API + \"/system/user/importData\"\n      },\n      // 查询参数\n      queryParams: {\n        pageNum: 1,\n        pageSize: 10,\n        userName: undefined,\n        phonenumber: undefined,\n        status: undefined,\n        deptId: undefined\n      },\n      // 列信息\n      columns: [\n        { key: 0, label: `用户编号`, visible: true },\n        { key: 1, label: `用户名称`, visible: true },\n        { key: 2, label: `用户昵称`, visible: true },\n        { key: 3, label: `部门`, visible: true },\n        { key: 4, label: `手机号码`, visible: true },\n        { key: 5, label: `状态`, visible: true },\n        { key: 6, label: `创建时间`, visible: true }\n      ],\n      // 表单校验\n      rules: {\n        userName: [\n          { required: true, message: \"用户名称不能为空\", trigger: \"blur\" },\n          { min: 2, max: 20, message: '用户名称长度必须介于 2 和 20 之间', trigger: 'blur' }\n        ],\n        nickName: [\n          { required: true, message: \"用户昵称不能为空\", trigger: \"blur\" }\n        ],\n        password: [\n          { required: true, message: \"用户密码不能为空\", trigger: \"blur\" },\n          { min: 5, max: 20, message: '用户密码长度必须介于 5 和 20 之间', trigger: 'blur' }\n        ],\n        email: [\n          {\n            type: \"email\",\n            message: \"请输入正确的邮箱地址\",\n            trigger: [\"blur\", \"change\"]\n          }\n        ],\n        phonenumber: [\n          {\n            pattern: /^1[3|4|5|6|7|8|9][0-9]\\d{8}$/,\n            message: \"请输入正确的手机号码\",\n            trigger: \"blur\"\n          }\n        ]\n      }\n    };\n  },\n  watch: {\n    // 根据名称筛选部门树\n    deptName (val) {\n      this.$refs.tree.filter(val);\n    }\n  },\n  created () {\n    this.getList();\n    this.getTreeselect();\n    this.getConfigKey(\"sys.user.initPassword\").then(response => {\n      this.initPassword = response.msg;\n    });\n  },\n  mounted () {\n    window.addEventListener('click', this.handleClick)\n    window.addEventListener('dblclick', this.handleClick)\n    window.addEventListener('contextmenu', this.handleClick)\n  },\n  methods: {\n    /** 查询用户列表 */\n    getList () {\n      this.loading = true;\n      listUser(this.addDateRange(this.queryParams, this.dateRange)).then(response => {\n        this.userList = response.rows;\n        this.total = response.total;\n        this.loading = false;\n      }\n      );\n    },\n    /** 查询部门下拉树结构 */\n    getTreeselect () {\n      treeselect().then(response => {\n        this.deptOptions = response.data;\n        //设置图标\n      });\n    },\n\n    /** 树节点右击事件 */\n    handleContextMenu (e, data, n, t) {\n      this.optionCardX = e.x\n      this.optionCardY = e.y\n      this.optionData = data\n      this.node = n\n      this.optionCardShow = true\n    },\n\n    handleClick () {\n      if (this.optionCardShow) {\n        this.optionCardShow = false;\n      }\n    },\n\n\n\n    addDept () {\n      let deptDetailRefs = this.$refs.deptDetail;\n      deptDetailRefs.open = true;\n      deptDetailRefs.parentRef = this;\n      let type = this.node.level == 1 ? 'O' : 'D';\n      deptDetailRefs.orgType = type;\n      deptDetailRefs.handleAdd(this.optionData.id, this.optionData.label);\n    },\n\n    removeDept () {\n      let deptDetailRefs = this.$refs.deptDetail;\n      deptDetailRefs.handleDelete(this.optionData);\n\n    },\n\n    editDept () {\n\n      console.log(this.optionData)\n      console.log(this.node)\n      let type = this.node.level == 1 ? 'R' : (this.node.level == 2 ? 'O' : 'D');\n      let deptDetailRefs = this.$refs.deptDetail;\n      deptDetailRefs.open = true;\n      deptDetailRefs.parentRef = this;\n      deptDetailRefs.orgType = type;\n      deptDetailRefs.handleUpdate(this.optionData.id, this.optionData.label);\n    },\n\n    up () {\n\n    },\n    down () {\n\n    },\n\n    changeTreeNodeStatus (node) {\n      node.expanded = this.expandALL\n      for (let i = 0; i < node.childNodes.length; i++) {\n        // 改变节点的自身expanded状态\n        node.childNodes[i].expanded = this.expandALL\n        // 遍历子节点\n        if (node.childNodes[i].childNodes.length > 0) {\n          this.changeTreeNodeStatus(node.childNodes[i])\n        }\n      }\n    },\n\n    expandAll () {\n      this.expandALL = true;\n      this.changeTreeNodeStatus(this.$refs.treeNode.store.root)\n    },\n\n\n\n    cuttleAll () {\n      this.expandALL = false;\n      this.changeTreeNodeStatus(this.$refs.treeNode.store.root)\n    },\n\n\n    // 筛选节点\n    filterNode (value, data) {\n      if (!value) return true;\n      return data.label.indexOf(value) !== -1;\n    },\n    // 节点单击事件\n    handleNodeClick (data) {\n      this.optionCardShow = false\n      this.queryParams.deptId = data.id;\n      this.handleQuery();\n    },\n    // 用户状态修改\n    handleStatusChange (row) {\n      let text = row.status === \"0\" ? \"启用\" : \"停用\";\n      this.$modal.confirm('确认要\"' + text + '\"\"' + row.userName + '\"用户吗？').then(function () {\n        return changeUserStatus(row.userId, row.status);\n      }).then(() => {\n        this.$modal.msgSuccess(text + \"成功\");\n      }).catch(function () {\n        row.status = row.status === \"0\" ? \"1\" : \"0\";\n      });\n    },\n    // 取消按钮\n    cancel () {\n      this.open = false;\n      this.reset();\n    },\n    // 表单重置\n    reset () {\n      this.form = {\n        userId: undefined,\n        deptId: undefined,\n        userName: undefined,\n        nickName: undefined,\n        password: undefined,\n        phonenumber: undefined,\n        officeNumber: undefined,\n        isPrincipal:false,\n        email: undefined,\n        sex: undefined,\n        status: \"0\",\n        remark: undefined,\n        postIds: [],\n        roleIds: []\n      };\n      this.resetForm(\"form\");\n    },\n    /** 搜索按钮操作 */\n    handleQuery () {\n      this.queryParams.pageNum = 1;\n      this.getList();\n    },\n    /** 重置按钮操作 */\n    resetQuery () {\n      this.dateRange = [];\n      this.resetForm(\"queryForm\");\n      this.handleQuery();\n    },\n    // 多选框选中数据\n    handleSelectionChange (selection) {\n      this.ids = selection.map(item => item.userId);\n      this.single = selection.length != 1;\n      this.multiple = !selection.length;\n    },\n    // 更多操作触发\n    handleCommand (command, row) {\n      switch (command) {\n        case \"handleResetPwd\":\n          this.handleResetPwd(row);\n          break;\n        case \"handleAuthRole\":\n          this.handleAuthRole(row);\n          break;\n        default:\n          break;\n      }\n    },\n    /** 新增按钮操作 */\n    handleAdd () {\n      this.reset();\n      this.getTreeselect();\n      getUser().then(response => {\n        this.postOptions = response.posts;\n        this.roleOptions = response.roles;\n        this.open = true;\n        this.title = \"人员-新增\";\n        this.form.password = this.initPassword;\n      });\n    },\n    /** 修改按钮操作 */\n    handleUpdate (row) {\n      this.reset();\n      this.getTreeselect();\n      const userId = row.userId || this.ids;\n      getUser(userId).then(response => {\n        this.form = response.data;\n        this.form.userId = response.data.userId;\n        if(response.data.isPrincipal == 'Y'){\n          this.form.isPrincipal = true;\n        }else {\n          this.form.isPrincipal = false;\n        }\n        this.postOptions = response.posts;\n        this.roleOptions = response.roles;\n        this.form.postIds = response.postIds;\n        this.form.roleIds = response.roleIds;\n        this.open = true;\n        this.title = \"人员-编辑\";\n        this.form.password = \"\";\n      });\n    },\n    /** 重置密码按钮操作 */\n    resetPwdForm () {\n\n      const value = \"123456\";\n      const userIds = this.form.userId;\n      this.$modal.confirm('是否重置 \"' + this.form.nickName  + '\" 的登录密码 默认密码为123456').then(function () {\n        return resetUserPwd(userIds, value);\n      }).then(() => {\n        this.getList();\n        this.open = false;\n        this.$modal.msgSuccess(\"重置密码成功\");\n      }).catch(() => { });\n    },\n    /** 分配角色操作 */\n    handleAuthRole: function (row) {\n      const userId = row.userId;\n      this.$router.push(\"/system/user-auth/role/\" + userId);\n    },\n    /** 提交按钮 */\n    submitForm: function () {\n      this.$refs[\"form\"].validate(valid => {\n        if (valid) {\n          if (this.form.userId != undefined) {\n            updateUser(this.form).then(response => {\n              this.$modal.msgSuccess(\"修改成功\");\n              this.open = false;\n              this.getList();\n            });\n          } else {\n            addUser(this.form).then(response => {\n              this.$modal.msgSuccess(\"新增成功\");\n              this.open = false;\n              this.getList();\n            });\n          }\n        }\n      });\n    },\n    /** 删除按钮操作 */\n    deleteForm () {\n      const userIds = this.form.userId;\n      this.$modal.confirm('是否删除 \"' + this.form.nickName + '\" ').then(function () {\n        return delUser(userIds);\n      }).then(() => {\n        this.getList();\n        this.open = false;\n        this.$modal.msgSuccess(\"删除成功\");\n      }).catch(() => { });\n    },\n    /** 导出按钮操作 */\n    handleExport () {\n      this.download('system/user/export', {\n        ...this.queryParams\n      }, `user_${new Date().getTime()}.xlsx`)\n    },\n    /** 导入按钮操作 */\n    handleImport () {\n      this.upload.title = \"用户导入\";\n      this.upload.open = true;\n    },\n    /** 下载模板操作 */\n    importTemplate () {\n      this.download('system/user/importTemplate', {\n      }, `user_template_${new Date().getTime()}.xlsx`)\n    },\n    // 文件上传中处理\n    handleFileUploadProgress (event, file, fileList) {\n      this.upload.isUploading = true;\n    },\n    // 文件上传成功处理\n    handleFileSuccess (response, file, fileList) {\n      this.upload.open = false;\n      this.upload.isUploading = false;\n      this.$refs.upload.clearFiles();\n      this.$alert(\"<div style='overflow: auto;overflow-x: hidden;max-height: 70vh;padding: 10px 20px 0;'>\" + response.msg + \"</div>\", \"导入结果\", { dangerouslyUseHTMLString: true });\n      this.getList();\n    },\n    // 提交上传文件\n    submitFileForm () {\n      this.$refs.upload.submit();\n    }\n  }\n};\n</script>\n\n<style scoped>\n.option-card-button {\n  width: 100%;\n  margin-left: 0;\n  font-size: 10px;\n  border-radius: 0;\n  vertical-align: middle;\n  text-align: center;\n  height: 20px;\n  line-height: 10px;\n}\n</style>\n"]}]}