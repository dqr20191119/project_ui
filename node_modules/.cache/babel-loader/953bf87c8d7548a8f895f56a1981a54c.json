{"remainingRequest":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\work\\proj\\project_manage\\project-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\work\\proj\\project_manage\\project-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\proj\\project_manage\\project-ui\\src\\views\\config\\fileDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\work\\proj\\project_manage\\project-ui\\src\\views\\config\\fileDetail.vue","mtime":1663479653276},{"path":"D:\\work\\proj\\project_manage\\project-ui\\babel.config.js","mtime":1663229169808},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663230084016},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1663230086097},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663230084016},{"path":"D:\\work\\proj\\project_manage\\project-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1663230087832}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;AA0EA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAEA;EACAA,YADA;EAEAC,+CAFA;EAGAC,IAHA,kBAGA;IACA;MACA;MACAC,aAFA;MAGA;MACAC,OAJA;MAKA;MACAC,YANA;MAOA;MACAC,cARA;MASAC,eATA;MAUA;MACAC,mBAXA;MAYA;MACAC,gBAbA;MAcA;MACAC,QAfA;MAgBA;MACAC,YAjBA;MAkBAC,SAlBA;MAmBA;MACAC,SApBA;MAqBA;MACAC,WAtBA;MAuBA;MACAC;QACAC,UADA;QAEAC,YAFA;QAGAC,cAHA;QAIAC,eAJA;QAKAC,eALA;QAMAC;MANA,CAxBA;MAgCA;MACAC,QAjCA;MAkCA;MACAC;QACAC,cACA;UAAAC;UAAAC;UAAAC;QAAA,CADA,CADA;QAIAN,WACA;UAAAI;UAAAC;UAAAC;QAAA,CADA;MAJA;IAnCA;EA4CA,CAhDA;EAiDAC,OAjDA,qBAiDA;IACA;EACA,CAnDA;EAqDAC;IAIAC,WAJA,uBAIAC,MAJA,EAIA;MAEA;QACA;MACA;;MACA;QACA/B,sBADA;QAEAgC,qBAFA;QAGAC;MAHA;IAMA,CAfA;IAiBA;IACAC,YAlBA,wBAkBAD,IAlBA,EAkBA,CAEA,CApBA;;IAuBA;IACAE,OAxBA,qBAwBA;MAAA;;MACA;MACA;QACA;QACA;QACA;MACA,CAJA;IAKA,CA/BA;IAgCA;IACAC,MAjCA,oBAiCA;MACA;MACA;IACA,CApCA;IAqCA;IACAC,KAtCA,mBAsCA;MACA,gBADA,CAEA;;MACA;;MACA;QACA;MACA;;MACA;QACAC,QADA;QAEApB,cAFA;QAGAC,eAHA;QAIAC,eAJA;QAKAC,cALA;QAMAkB,cANA;QAOAC,gBAPA;QAQAC,cARA;QASAC;MATA;MAWA;IACA,CAzDA;;IA0DA;IACAC,WA3DA,yBA2DA;MACA;MACA;IACA,CA9DA;;IA+DA;IACAC,UAhEA,wBAgEA;MACA;MACA;IACA,CAnEA;IAoEA;IACAC,qBArEA,iCAqEAC,SArEA,EAqEA;MACA;QAAA;MAAA;MACA;MACA;IACA,CAzEA;;IA0EA;IACAC,SA3EA,uBA2EA;MACA;MACA;MACA;IACA,CA/EA;;IAgFA;IACAC,YAjFA,wBAiFAC,GAjFA,EAiFA;MAAA;;MACA;MACA;MACA;QACA;QACA;QACA;MACA,CAJA;IAKA,CAzFA;;IA0FA;IACAC,UA3FA,wBA2FA;MAAA;;MACA;QACA;UACA;YACA;;YACA;UACA;;UAEA,8BANA,CAOA;UACA;;UACA;UACAC;;UACA;YACA;cACA;gBACAC;cACA;YACA;;YACAC;UACA,CAPA;;UAQA;YACA;;YACA;UACA;;UACA;YACAA;UACA;;UACAA;;UACA;YACAA;UACA;;UACA;YACAA;UACA;;UACAA;UACA;YACA;cACA;;cACA;;cACA;YACA;UAEA,CAPA;QAQA;MACA,CA5CA;IA6CA,CAzIA;;IA0IA;IACAC,YA3IA,wBA2IAL,GA3IA,EA2IA;MAAA;;MACA;MACA;QACA;MACA,CAFA,EAEAM,IAFA,CAEA;QACA;;QACA;MACA,CALA,EAKAC,KALA,CAKA,cALA;IAMA,CAnJA;;IAoJA;IACAC,YArJA,0BAqJA;MACA,oEACA,gBADA,kBAEA,oBAFA;IAGA;EAzJA;AArDA,C","names":["name","dicts","data","loading","ids","single","multiple","operation","fileMultiple","showSearch","total","infoList","files","title","open","queryParams","pageNum","pageSize","filePath","layerName","layerType","fileType","form","rules","componentId","required","message","trigger","created","methods","httpRequest","option","url","file","beforeUpload","getList","cancel","reset","id","createBy","createTime","updateBy","updateTime","handleQuery","resetQuery","handleSelectionChange","selection","handleAdd","handleUpdate","row","submitForm","console","formatError","formData","handleDelete","then","catch","handleExport"],"sourceRoot":"src/views/config","sources":["fileDetail.vue"],"sourcesContent":["<template>\r\n  <!-- 添加或修改文件信息对话框 -->\r\n  <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"700px\" append-to-body>\r\n    <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"120px\">\r\n      <el-row>\r\n        <el-col :span=\"12\">\r\n          <el-form-item label=\"文件类型\" prop=\"fileType\">\r\n            <el-select\r\n              v-model=\"form.fileType\"\r\n              placeholder=\"请选择文件类型\"\r\n              clearable\r\n            >\r\n              <el-option\r\n                v-for=\"dict in dict.type.sys_file_type\"\r\n                :key=\"dict.value\"\r\n                :label=\"dict.label\"\r\n                :value=\"dict.value\"\r\n              />\r\n            </el-select>\r\n          </el-form-item>\r\n        </el-col>\r\n        <el-col :span=\"12\">\r\n          <el-form-item label=\"图层类型\" prop=\"layerType\">\r\n            <el-select\r\n              v-model=\"form.layerType\"\r\n              placeholder=\"请选择图层类型\"\r\n              clearable\r\n            >\r\n              <el-option\r\n                v-for=\"dict in dict.type.sys_layer_file_type\"\r\n                :key=\"dict.value\"\r\n                :label=\"dict.label\"\r\n                :value=\"dict.value\"\r\n              />\r\n            </el-select>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <el-row>\r\n        <el-col :span=\"24\">\r\n          <el-form-item label=\"图层名称\" prop=\"layerName\">\r\n            <el-input v-model=\"form.layerName\" placeholder=\"请输入图层名称\" />\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n      <el-row>\r\n        <el-col :span=\"24\">\r\n          <el-upload\r\n            ref=\"uploadFile\"\r\n            style=\"margin-left: 50px\"\r\n            class=\"upload-demo\"\r\n            :http-request=\"httpRequest\"\r\n            :file-list=\"files\"\r\n            :multiple=\"fileMultiple\"\r\n            :limit=\"8\"\r\n            action=\"#\"\r\n            :show-file-list=\"true\"\r\n            :before-upload=\"beforeUpload\"\r\n            :data=\"form\"\r\n          >\r\n            <el-button size=\"small\" type=\"primary\">点击上传</el-button>\r\n          </el-upload>\r\n        </el-col>\r\n      </el-row>\r\n    </el-form>\r\n    <div slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\r\n      <el-button @click=\"cancel\">取 消</el-button>\r\n    </div>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { listInfo, getInfo, delInfo, addInfo, updateInfo, upload } from \"@/api/config/file\";\r\n\r\nexport default {\r\n  name: \"Info\",\r\n  dicts: ['sys_file_type', 'sys_layer_file_type'],\r\n  data () {\r\n    return {\r\n      // 遮罩层\r\n      loading: true,\r\n      // 选中数组\r\n      ids: [],\r\n      // 非单个禁用\r\n      single: true,\r\n      // 非多个禁用\r\n      multiple: true,\r\n      operation: null,\r\n      // 支持文件多个上传\r\n      fileMultiple: false,\r\n      // 显示搜索条件\r\n      showSearch: true,\r\n      // 总条数\r\n      total: 0,\r\n      // 文件信息表格数据\r\n      infoList: [],\r\n      files: [],\r\n      // 弹出层标题\r\n      title: \"\",\r\n      // 是否显示弹出层\r\n      open: false,\r\n      // 查询参数\r\n      queryParams: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n        filePath: null,\r\n        layerName: null,\r\n        layerType: null,\r\n        fileType: null,\r\n      },\r\n      // 表单参数\r\n      form: {},\r\n      // 表单校验\r\n      rules: {\r\n        componentId: [\r\n          { required: true, message: \"组件ID不能为空\", trigger: \"blur\" }\r\n        ],\r\n        fileType: [\r\n          { required: true, message: \"文件类型不能为空\", trigger: \"blur\" }\r\n        ],\r\n      }\r\n    };\r\n  },\r\n  created () {\r\n    this.getList();\r\n  },\r\n\r\n  methods: {\r\n\r\n\r\n\r\n    httpRequest (option) {\r\n\r\n      if (this.operation == 'update') {\r\n        this.files = [];\r\n      }\r\n      this.files.push({\r\n        name: option.file.name,\r\n        url: option.file.name,\r\n        file: option.file\r\n      })\r\n\r\n    },\r\n\r\n    // 上传预处理\r\n    beforeUpload (file) {\r\n\r\n    },\r\n\r\n\r\n    /** 查询文件信息列表 */\r\n    getList () {\r\n      this.loading = true;\r\n      listInfo(this.queryParams).then(response => {\r\n        this.infoList = response.rows;\r\n        this.total = response.total;\r\n        this.loading = false;\r\n      });\r\n    },\r\n    // 取消按钮\r\n    cancel () {\r\n      this.open = false;\r\n      this.reset();\r\n    },\r\n    // 表单重置\r\n    reset () {\r\n      this.files = [];\r\n      //清空上传控件文件信息\r\n      let uploadFile = this.$refs.uploadFile;\r\n      if (uploadFile) {\r\n        this.$refs.uploadFile.clearFiles();\r\n      }\r\n      this.form = {\r\n        id: null,\r\n        filePath: null,\r\n        layerName: null,\r\n        layerType: null,\r\n        fileType: null,\r\n        createBy: null,\r\n        createTime: null,\r\n        updateBy: null,\r\n        updateTime: null\r\n      };\r\n      this.resetForm(\"form\");\r\n    },\r\n    /** 搜索按钮操作 */\r\n    handleQuery () {\r\n      this.queryParams.pageNum = 1;\r\n      this.getList();\r\n    },\r\n    /** 重置按钮操作 */\r\n    resetQuery () {\r\n      this.resetForm(\"queryForm\");\r\n      this.handleQuery();\r\n    },\r\n    // 多选框选中数据\r\n    handleSelectionChange (selection) {\r\n      this.ids = selection.map(item => item.id)\r\n      this.single = selection.length !== 1\r\n      this.multiple = !selection.length\r\n    },\r\n    /** 新增按钮操作 */\r\n    handleAdd () {\r\n      this.reset();\r\n      this.open = true;\r\n      this.title = \"添加文件信息\";\r\n    },\r\n    /** 修改按钮操作 */\r\n    handleUpdate (row) {\r\n      this.reset();\r\n      const id = row.id || this.ids\r\n      getInfo(id).then(response => {\r\n        this.form = response.data;\r\n        this.open = true;\r\n        this.title = \"修改文件信息\";\r\n      });\r\n    },\r\n    /** 提交按钮 */\r\n    submitForm () {\r\n      this.$refs[\"form\"].validate(valid => {\r\n        if (valid) {\r\n          if (this.files.length == 0) {\r\n            this.$modal.msgError(\"请上传文件\");\r\n            return;\r\n          }\r\n\r\n          let formData = new FormData();\r\n          // formData.append(\"files\", this.files);\r\n          // 将上传文件数组依次添加到参数paramsData中\r\n          let formatError = true;\r\n          console.log(this.files);\r\n          this.files.forEach((x) => {\r\n            if (this.form.fileType == 'SHP') {\r\n              if (x.file.name.indexOf(\"shp\") != -1) {\r\n                formatError = false;\r\n              }\r\n            }\r\n            formData.append('file', x.file)\r\n          });\r\n          if (formatError) {\r\n            this.$modal.msgError(\"文件格式错误，请上传shp文件类型\");\r\n            return;\r\n          }\r\n          if (this.form.id != null) {\r\n            formData.append(\"id\", this.form.id);\r\n          }\r\n          formData.append(\"fileType\", this.form.fileType);\r\n          if (this.form.layerType != null) {\r\n            formData.append(\"layerType\", this.form.layerType);\r\n          }\r\n          if (this.form.layerName != null) {\r\n            formData.append(\"layerName\", this.form.layerName);\r\n          }\r\n          formData.append(\"componentId\", this.form.componentId)\r\n          upload(formData).then(response => {\r\n            if (response && response.data) {\r\n              this.$modal.msgSuccess(\"操作成功\");\r\n              this.open = false;\r\n              this.$parent.getList();\r\n            }\r\n\r\n          });\r\n        }\r\n      });\r\n    },\r\n    /** 删除按钮操作 */\r\n    handleDelete (row) {\r\n      const ids = row.id || this.ids;\r\n      this.$modal.confirm('是否确认删除文件信息？').then(function () {\r\n        return delInfo(ids);\r\n      }).then(() => {\r\n        this.getList();\r\n        this.$modal.msgSuccess(\"删除成功\");\r\n      }).catch(() => { });\r\n    },\r\n    /** 导出按钮操作 */\r\n    handleExport () {\r\n      this.download('system/info/export', {\r\n        ...this.queryParams\r\n      }, `info_${new Date().getTime()}.xlsx`)\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n"]}]}